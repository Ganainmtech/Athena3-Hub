{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport Typography from '../Typography';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n    code = _ref.code,\n    underline = _ref.underline,\n    del = _ref.delete,\n    strong = _ref.strong,\n    keyboard = _ref.keyboard,\n    italic = _ref.italic;\n  var currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _a, _b, _c;\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    type = props.type,\n    disabled = props.disabled,\n    children = props.children,\n    ellipsis = props.ellipsis,\n    editable = props.editable,\n    copyable = props.copyable,\n    component = props.component,\n    title = props.title,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var _useLocale = useLocale('Text'),\n    _useLocale2 = _slicedToArray(_useLocale, 1),\n    textLocale = _useLocale2[0];\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  var _useMergedConfig = useMergedConfig(editable),\n    _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n    enableEdit = _useMergedConfig2[0],\n    editConfig = _useMergedConfig2[1];\n  var _useMergedState = useMergedState(false, {\n      value: editConfig.editing\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    editing = _useMergedState2[0],\n    setEditing = _useMergedState2[1];\n  var _editConfig$triggerTy = editConfig.triggerType,\n    triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(function () {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  var onEditClick = function onEditClick(e) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  var onEditChange = function onEditChange(value) {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  var onEditCancel = function onEditCancel() {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  var _useMergedConfig3 = useMergedConfig(copyable),\n    _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n    enableCopy = _useMergedConfig4[0],\n    copyConfig = _useMergedConfig4[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    copied = _React$useState2[0],\n    setCopied = _React$useState2[1];\n  var copyIdRef = React.useRef(null);\n  var copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  var cleanCopyId = function cleanCopyId() {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n  var onCopyClick = function onCopyClick(e) {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = setTimeout(function () {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(function () {\n    return cleanCopyId;\n  }, []);\n  // ========================== Ellipsis ==========================\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isLineClampSupport = _React$useState4[0],\n    setIsLineClampSupport = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isTextOverflowSupport = _React$useState6[0],\n    setIsTextOverflowSupport = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    expanded = _React$useState8[0],\n    setExpanded = _React$useState8[1];\n  var _React$useState9 = React.useState(false),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    isJsEllipsis = _React$useState10[0],\n    setIsJsEllipsis = _React$useState10[1];\n  var _React$useState11 = React.useState(false),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    isNativeEllipsis = _React$useState12[0],\n    setIsNativeEllipsis = _React$useState12[1];\n  var _React$useState13 = React.useState(true),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    isNativeVisible = _React$useState14[0],\n    setIsNativeVisible = _React$useState14[1];\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n      expandable: false\n    }),\n    _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n    enableEllipsis = _useMergedConfig6[0],\n    ellipsisConfig = _useMergedConfig6[1];\n  var mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n    rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (\n      // Disable ellipsis\n      !mergedEnableEllipsis ||\n      // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n      // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  var cssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  var onExpandClick = function onExpandClick(e) {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  var _React$useState15 = React.useState(0),\n    _React$useState16 = _slicedToArray(_React$useState15, 2),\n    ellipsisWidth = _React$useState16[0],\n    setEllipsisWidth = _React$useState16[1];\n  var _React$useState17 = React.useState(0),\n    _React$useState18 = _slicedToArray(_React$useState17, 2),\n    ellipsisFontSize = _React$useState18[0],\n    setEllipsisFontSize = _React$useState18[1];\n  var onResize = function onResize(_ref2, element) {\n    var offsetWidth = _ref2.offsetWidth;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    var observer = new IntersectionObserver(function () {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return function () {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  var tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  var topAriaLabel = React.useMemo(function () {\n    var isValid = function isValid(val) {\n      return ['string', 'number'].includes(typeof val);\n    };\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n      symbol = ellipsisConfig.symbol;\n    if (!expandable) return null;\n    var expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-expand\"),\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) return;\n    var icon = editConfig.icon,\n      tooltip = editConfig.tooltip;\n    var editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  };\n  // Copy\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) return;\n    var tooltips = copyConfig.tooltips,\n      icon = copyConfig.icon;\n    var tooltipNodes = toList(tooltips);\n    var iconNodes = toList(icon);\n    var copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    var systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n  var renderOperations = function renderOperations(renderExpanded) {\n    return [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  };\n  var renderEllipsis = function renderEllipsis(needEllipsis) {\n    return [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  };\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      tooltipProps: tooltipProps,\n      enabledEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), mergedEnableEllipsis && rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      prefixCls: customizePrefixCls,\n      style: Object.assign(Object.assign({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : undefined,\n      \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      fontSize: ellipsisFontSize,\n      onEllipsis: onJsEllipsis\n    }, function (node, needEllipsis) {\n      var renderNode = node;\n      if (node.length && needEllipsis && topAriaLabel) {\n        renderNode = /*#__PURE__*/React.createElement(\"span\", {\n          key: \"show-content\",\n          \"aria-hidden\": true\n        }, renderNode);\n      }\n      var wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n      return wrappedContext;\n    })));\n  });\n});\nexport default Base;","map":{"version":3,"names":["_defineProperty","_slicedToArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckOutlined","CopyOutlined","EditOutlined","classNames","copy","ResizeObserver","toArray","useIsomorphicLayoutEffect","useMergedState","omit","composeRef","React","isStyleSupport","TransButton","ConfigContext","useLocale","Tooltip","Editable","Typography","useMergedConfig","useUpdatedEffect","Ellipsis","EllipsisTooltip","wrapperDecorations","_ref","content","mark","code","underline","del","delete","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","getNode","dom","defaultNode","needDom","undefined","toList","val","Array","isArray","ELLIPSIS_STR","Base","forwardRef","props","ref","_a","_b","_c","customizePrefixCls","prefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","_React$useContext","useContext","getPrefixCls","direction","_useLocale","_useLocale2","textLocale","typographyRef","useRef","editIconRef","textProps","_useMergedConfig","_useMergedConfig2","enableEdit","editConfig","_useMergedState","value","editing","_useMergedState2","setEditing","_editConfig$triggerTy","triggerType","triggerEdit","edit","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","_useMergedConfig3","_useMergedConfig4","enableCopy","copyConfig","_React$useState","useState","_React$useState2","copied","setCopied","copyIdRef","copyOptions","format","cleanCopyId","clearTimeout","onCopyClick","stopPropagation","text","String","setTimeout","onCopy","useEffect","_React$useState3","_React$useState4","isLineClampSupport","setIsLineClampSupport","_React$useState5","_React$useState6","isTextOverflowSupport","setIsTextOverflowSupport","_React$useState7","_React$useState8","expanded","setExpanded","_React$useState9","_React$useState10","isJsEllipsis","setIsJsEllipsis","_React$useState11","_React$useState12","isNativeEllipsis","setIsNativeEllipsis","_React$useState13","_React$useState14","isNativeVisible","setIsNativeVisible","_useMergedConfig5","expandable","_useMergedConfig6","enableEllipsis","ellipsisConfig","mergedEnableEllipsis","_ellipsisConfig$rows","rows","needMeasureEllipsis","useMemo","suffix","onEllipsis","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","_React$useState15","_React$useState16","ellipsisWidth","setEllipsisWidth","_React$useState17","_React$useState18","ellipsisFontSize","setEllipsisFontSize","onResize","_ref2","element","offsetWidth","parseInt","window","getComputedStyle","fontSize","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","offsetHeight","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","isValidElement","assign","topAriaLabel","isValid","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","symbol","expandContent","expand","key","concat","onClick","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","systemStr","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","_classNames","enabledEllipsis","isEllipsis","WebkitLineClamp","toString","enabledMeasure","width","node","renderNode","wrappedContext","Fragment"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/antd/es/typography/Base/index.js"],"sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport Typography from '../Typography';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\nexport default Base;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}