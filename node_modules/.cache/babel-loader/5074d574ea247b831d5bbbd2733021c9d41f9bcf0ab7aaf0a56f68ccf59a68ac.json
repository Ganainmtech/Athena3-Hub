{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport * as encoding from '../../../encoding/encoding';\nimport { setHeaders } from './compile';\nvar Dryrun = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(Dryrun, _JSONRequest);\n  var _super = _createSuper(Dryrun);\n  function Dryrun(c, dr) {\n    var _this;\n    _classCallCheck(this, Dryrun);\n    _this = _super.call(this, c);\n    _this.blob = encoding.encode(dr.get_obj_for_encoding(true));\n    return _this;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  _createClass(Dryrun, [{\n    key: \"path\",\n    value: function path() {\n      return '/v2/teal/dryrun';\n    }\n    /**\n     * Executes dryrun\n     * @param headers - A headers object\n     */\n  }, {\n    key: \"do\",\n    value: function () {\n      var _do2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var headers,\n          txHeaders,\n          res,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              headers = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              txHeaders = setHeaders(headers);\n              _context.next = 4;\n              return this.c.post(this.path(), Buffer.from(this.blob), txHeaders);\n            case 4:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.body);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _do() {\n        return _do2.apply(this, arguments);\n      }\n      return _do;\n    }()\n  }]);\n  return Dryrun;\n}(JSONRequest);\nexport { Dryrun as default };","map":{"version":3,"names":["Buffer","JSONRequest","encoding","setHeaders","Dryrun","_JSONRequest","_inherits","_super","_createSuper","c","dr","_this","_classCallCheck","call","blob","encode","get_obj_for_encoding","_createClass","key","value","path","_do2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","headers","txHeaders","res","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","post","from","sent","abrupt","body","stop","_do","apply","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/algod/dryrun.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as modelsv2 from './models/types';\nimport * as encoding from '../../../encoding/encoding';\nimport { setHeaders } from './compile';\n\nexport default class Dryrun extends JSONRequest {\n  private blob: Uint8Array;\n\n  constructor(c: HTTPClient, dr: modelsv2.DryrunRequest) {\n    super(c);\n    this.blob = encoding.encode(dr.get_obj_for_encoding(true));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/teal/dryrun';\n  }\n\n  /**\n   * Executes dryrun\n   * @param headers - A headers object\n   */\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.blob),\n      txHeaders\n    );\n    return res.body;\n  }\n}\n"],"mappings":";;;;;;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,WAAW,MAAM,gBAAgB;AAGxC,OAAO,KAAKC,QAAQ,MAAM,4BAA4B;AACtD,SAASC,UAAU,QAAQ,WAAW;AAAC,IAElBC,MAAO,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,MAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,MAAA;EAG1B,SAAAA,OAAYK,CAAa,EAAEC,EAA0B;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,MAAA;IACnDO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMJ,CAAC;IACPE,KAAA,CAAKG,IAAI,GAAGZ,QAAQ,CAACa,MAAM,CAACL,EAAE,CAACM,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAAC,OAAAL,KAAA;EAC7D;EAEA;EAAAM,YAAA,CAAAb,MAAA;IAAAc,GAAA;IAAAC,KAAA,EACA,SAAAC,KAAA,EAAI;MACF,OAAO,iBAAiB;IAC1B;IAEA;;;;EAAA;IAAAF,GAAA;IAAAC,KAAA;MAAA,IAAAE,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAIA,SAAAC,QAAA;QAAA,IAAAC,OAAA;UAAAC,SAAA;UAAAC,GAAA;UAAAC,KAAA,GAAAC,SAAA;QAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAST,OAAO,GAAAG,KAAA,CAAAO,MAAA,QAAAP,KAAA,QAAAQ,SAAA,GAAAR,KAAA,MAAG,EAAE;cACbF,SAAS,GAAGxB,UAAU,CAACuB,OAAO,CAAC;cAAAO,QAAA,CAAAE,IAAA;cAAA,OACnB,IAAI,CAAC1B,CAAC,CAAC6B,IAAI,CAC3B,IAAI,CAAClB,IAAI,EAAE,EACXpB,MAAM,CAACuC,IAAI,CAAC,IAAI,CAACzB,IAAI,CAAC,EACtBa,SAAS,CACV;YAAA;cAJKC,GAAG,GAAAK,QAAA,CAAAO,IAAA;cAAA,OAAAP,QAAA,CAAAQ,MAAA,WAKFb,GAAG,CAACc,IAAI;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA,CAChB;MAAA,SAAAmB,IAAA;QAAA,OAAAvB,IAAA,CAAAwB,KAAA,OAAAf,SAAA;MAAA;MAAA,OAAAc,GAAA;IAAA;EAAA;EAAA,OAAAxC,MAAA;AAAA,EAzBiCH,WAAW;AAAA,SAA1BG,MAAO,IAAA0C,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}