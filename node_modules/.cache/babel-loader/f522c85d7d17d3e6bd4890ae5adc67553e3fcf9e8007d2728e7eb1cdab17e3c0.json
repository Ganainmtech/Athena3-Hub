{"ast":null,"code":"import _slicedToArray from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useForm as useRcForm } from 'rc-field-form';\nimport * as React from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { getFieldId, toArray } from '../util';\nfunction toNamePathStr(name) {\n  var namePath = toArray(name);\n  return namePath.join('_');\n}\nexport default function useForm(form) {\n  var _useRcForm = useRcForm(),\n    _useRcForm2 = _slicedToArray(_useRcForm, 1),\n    rcForm = _useRcForm2[0];\n  var itemsRef = React.useRef({});\n  var wrapForm = React.useMemo(function () {\n    return form !== null && form !== void 0 ? form : Object.assign(Object.assign({}, rcForm), {\n      __INTERNAL__: {\n        itemRef: function itemRef(name) {\n          return function (node) {\n            var namePathStr = toNamePathStr(name);\n            if (node) {\n              itemsRef.current[namePathStr] = node;\n            } else {\n              delete itemsRef.current[namePathStr];\n            }\n          };\n        }\n      },\n      scrollToField: function scrollToField(name) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var namePath = toArray(name);\n        var fieldId = getFieldId(namePath, wrapForm.__INTERNAL__.name);\n        var node = fieldId ? document.getElementById(fieldId) : null;\n        if (node) {\n          scrollIntoView(node, Object.assign({\n            scrollMode: 'if-needed',\n            block: 'nearest'\n          }, options));\n        }\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        var namePathStr = toNamePathStr(name);\n        return itemsRef.current[namePathStr];\n      }\n    });\n  }, [form, rcForm]);\n  return [wrapForm];\n}","map":{"version":3,"names":["useForm","useRcForm","React","scrollIntoView","getFieldId","toArray","toNamePathStr","name","namePath","join","form","_useRcForm","_useRcForm2","_slicedToArray","rcForm","itemsRef","useRef","wrapForm","useMemo","Object","assign","__INTERNAL__","itemRef","node","namePathStr","current","scrollToField","options","arguments","length","undefined","fieldId","document","getElementById","scrollMode","block","getFieldInstance"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/antd/es/form/hooks/useForm.js"],"sourcesContent":["import { useForm as useRcForm } from 'rc-field-form';\nimport * as React from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { getFieldId, toArray } from '../util';\nfunction toNamePathStr(name) {\n  const namePath = toArray(name);\n  return namePath.join('_');\n}\nexport default function useForm(form) {\n  const [rcForm] = useRcForm();\n  const itemsRef = React.useRef({});\n  const wrapForm = React.useMemo(() => form !== null && form !== void 0 ? form : Object.assign(Object.assign({}, rcForm), {\n    __INTERNAL__: {\n      itemRef: name => node => {\n        const namePathStr = toNamePathStr(name);\n        if (node) {\n          itemsRef.current[namePathStr] = node;\n        } else {\n          delete itemsRef.current[namePathStr];\n        }\n      }\n    },\n    scrollToField: function (name) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const namePath = toArray(name);\n      const fieldId = getFieldId(namePath, wrapForm.__INTERNAL__.name);\n      const node = fieldId ? document.getElementById(fieldId) : null;\n      if (node) {\n        scrollIntoView(node, Object.assign({\n          scrollMode: 'if-needed',\n          block: 'nearest'\n        }, options));\n      }\n    },\n    getFieldInstance: name => {\n      const namePathStr = toNamePathStr(name);\n      return itemsRef.current[namePathStr];\n    }\n  }), [form, rcForm]);\n  return [wrapForm];\n}"],"mappings":";AAAA,SAASA,OAAO,IAAIC,SAAS,QAAQ,eAAe;AACpD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,cAAc,MAAM,4BAA4B;AACvD,SAASC,UAAU,EAAEC,OAAO,QAAQ,SAAS;AAC7C,SAASC,aAAaA,CAACC,IAAI,EAAE;EAC3B,IAAMC,QAAQ,GAAGH,OAAO,CAACE,IAAI,CAAC;EAC9B,OAAOC,QAAQ,CAACC,IAAI,CAAC,GAAG,CAAC;AAC3B;AACA,eAAe,SAAST,OAAOA,CAACU,IAAI,EAAE;EACpC,IAAAC,UAAA,GAAiBV,SAAS,CAAC,CAAC;IAAAW,WAAA,GAAAC,cAAA,CAAAF,UAAA;IAArBG,MAAM,GAAAF,WAAA;EACb,IAAMG,QAAQ,GAAGb,KAAK,CAACc,MAAM,CAAC,CAAC,CAAC,CAAC;EACjC,IAAMC,QAAQ,GAAGf,KAAK,CAACgB,OAAO,CAAC;IAAA,OAAMR,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAGS,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,MAAM,CAAC,EAAE;MACtHO,YAAY,EAAE;QACZC,OAAO,EAAE,SAAAA,QAAAf,IAAI;UAAA,OAAI,UAAAgB,IAAI,EAAI;YACvB,IAAMC,WAAW,GAAGlB,aAAa,CAACC,IAAI,CAAC;YACvC,IAAIgB,IAAI,EAAE;cACRR,QAAQ,CAACU,OAAO,CAACD,WAAW,CAAC,GAAGD,IAAI;YACtC,CAAC,MAAM;cACL,OAAOR,QAAQ,CAACU,OAAO,CAACD,WAAW,CAAC;YACtC;UACF,CAAC;QAAA;MACH,CAAC;MACDE,aAAa,EAAE,SAAAA,cAAUnB,IAAI,EAAE;QAC7B,IAAIoB,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACpF,IAAMpB,QAAQ,GAAGH,OAAO,CAACE,IAAI,CAAC;QAC9B,IAAMwB,OAAO,GAAG3B,UAAU,CAACI,QAAQ,EAAES,QAAQ,CAACI,YAAY,CAACd,IAAI,CAAC;QAChE,IAAMgB,IAAI,GAAGQ,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACF,OAAO,CAAC,GAAG,IAAI;QAC9D,IAAIR,IAAI,EAAE;UACRpB,cAAc,CAACoB,IAAI,EAAEJ,MAAM,CAACC,MAAM,CAAC;YACjCc,UAAU,EAAE,WAAW;YACvBC,KAAK,EAAE;UACT,CAAC,EAAER,OAAO,CAAC,CAAC;QACd;MACF,CAAC;MACDS,gBAAgB,EAAE,SAAAA,iBAAA7B,IAAI,EAAI;QACxB,IAAMiB,WAAW,GAAGlB,aAAa,CAACC,IAAI,CAAC;QACvC,OAAOQ,QAAQ,CAACU,OAAO,CAACD,WAAW,CAAC;MACtC;IACF,CAAC,CAAC;EAAA,GAAE,CAACd,IAAI,EAAEI,MAAM,CAAC,CAAC;EACnB,OAAO,CAACG,QAAQ,CAAC;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}