{"ast":null,"code":"import _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport JSONRequest from '../jsonrequest';\nvar LookupAccountAppLocalStates = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(LookupAccountAppLocalStates, _JSONRequest);\n  var _super = _createSuper(LookupAccountAppLocalStates);\n  /**\n   * Returns application local state about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAppLocalStates = await indexerClient.lookupAccountAppLocalStates(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idapps-local-state)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  function LookupAccountAppLocalStates(c, intDecoding, account) {\n    var _this;\n    _classCallCheck(this, LookupAccountAppLocalStates);\n    _this = _super.call(this, c, intDecoding);\n    _this.account = account;\n    _this.account = account;\n    return _this;\n  }\n  /**\n   * @returns `/v2/accounts/${account}/apps-local-state`\n   */\n  _createClass(LookupAccountAppLocalStates, [{\n    key: \"path\",\n    value: function path() {\n      return \"/v2/accounts/\".concat(this.account, \"/apps-local-state\");\n    }\n    /**\n     * Add a limit for filter.\n     *\n     * #### Example\n     * ```typescript\n     * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n     * const maxResults = 20;\n     * const accountAssets = await indexerClient\n     *        .lookupAccountAppLocalStates(address)\n     *        .limit(maxResults)\n     *        .do();\n     * ```\n     *\n     * @param limit - maximum number of results to return.\n     * @category query\n     */\n  }, {\n    key: \"limit\",\n    value: function limit(_limit) {\n      this.query.limit = _limit;\n      return this;\n    }\n    /**\n     * Specify round to filter with.\n     *\n     * #### Example\n     * ```typescript\n     * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n     * const targetBlock = 18309917;\n     * const accountAssets = await indexerClient\n     *        .lookupAccountAppLocalStates(address)\n     *        .round(targetBlock)\n     *        .do();\n     * ```\n     * @param round\n     * @category query\n     */\n  }, {\n    key: \"round\",\n    value: function round(_round) {\n      this.query.round = _round;\n      return this;\n    }\n    /**\n     * Specify the next page of results.\n     *\n     * #### Example\n     * ```typescript\n     * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n     * const maxResults = 20;\n     *\n     * const accountAssetsPage1 = await indexerClient\n     *        .lookupAccountAppLocalStates(address)\n     *        .limit(maxResults)\n     *        .do();\n     *\n     * const accountAssetsPage2 = await indexerClient\n     *        .lookupAccountAppLocalStates(address)\n     *        .limit(maxResults)\n     *        .next(accountAssetsPage1[\"next-token\"])\n     *        .do();\n     * ```\n     * @param nextToken - provided by the previous results.\n     */\n  }, {\n    key: \"nextToken\",\n    value: function nextToken(_nextToken) {\n      this.query.next = _nextToken;\n      return this;\n    }\n    /**\n     * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n     *\n     * #### Example\n     * ```typescript\n     * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n     * const accountAssets = await indexerClient\n     *        .lookupAccountAppLocalStates(address)\n     *        .includeAll(false)\n     *        .do();\n     * ```\n     * @param value\n     * @category query\n     */\n  }, {\n    key: \"includeAll\",\n    value: function includeAll() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.query['include-all'] = value;\n      return this;\n    }\n    /**\n     * Specify an applicationID to search for.\n     *\n     * #### Example\n     * ```typescript\n     * const applicationID = 163650;\n     * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n     * const accountApplications = await indexerClient\n     *        .lookupAccountAppLocalStates(address)\n     *        .applicationID(applicationID)\n     *        .do();\n     * ```\n     * @param index - the applicationID\n     * @category query\n     */\n  }, {\n    key: \"applicationID\",\n    value: function applicationID(index) {\n      this.query['application-id'] = index;\n      return this;\n    }\n  }]);\n  return LookupAccountAppLocalStates;\n}(JSONRequest);\nexport { LookupAccountAppLocalStates as default };","map":{"version":3,"names":["JSONRequest","LookupAccountAppLocalStates","_JSONRequest","_inherits","_super","_createSuper","c","intDecoding","account","_this","_classCallCheck","call","_createClass","key","value","path","concat","limit","query","round","nextToken","next","includeAll","arguments","length","undefined","applicationID","index","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/indexer/lookupAccountAppLocalStates.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountAppLocalStates extends JSONRequest {\n  /**\n   * Returns application local state about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAppLocalStates = await indexerClient.lookupAccountAppLocalStates(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idapps-local-state)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/apps-local-state`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/apps-local-state`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an applicationID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const applicationID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountApplications = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .applicationID(applicationID)\n   *        .do();\n   * ```\n   * @param index - the applicationID\n   * @category query\n   */\n  applicationID(index: number) {\n    this.query['application-id'] = index;\n    return this;\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAAC,IAIpBC,2BAA4B,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,2BAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,2BAAA;EAC/C;;;;;;;;;;;;;EAaA,SAAAA,4BACEK,CAAa,EACbC,WAAwB,EAChBC,OAAe;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,2BAAA;IAEvBQ,KAAA,GAAAL,MAAA,CAAAO,IAAA,OAAML,CAAC,EAAEC,WAAW;IAFZE,KAAA,CAAAD,OAAO,GAAPA,OAAO;IAGfC,KAAA,CAAKD,OAAO,GAAGA,OAAO;IAAC,OAAAC,KAAA;EACzB;EAEA;;;EAAAG,YAAA,CAAAX,2BAAA;IAAAY,GAAA;IAAAC,KAAA,EAGA,SAAAC,KAAA,EAAI;MACF,uBAAAC,MAAA,CAAuB,IAAI,CAACR,OAAO;IACrC;IAEA;;;;;;;;;;;;;;;;EAAA;IAAAK,GAAA;IAAAC,KAAA,EAgBA,SAAAG,MAAMA,MAAa;MACjB,IAAI,CAACC,KAAK,CAACD,KAAK,GAAGA,MAAK;MACxB,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EAeA,SAAAK,MAAMA,MAAa;MACjB,IAAI,CAACD,KAAK,CAACC,KAAK,GAAGA,MAAK;MACxB,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;;;;;;;EAAA;IAAAN,GAAA;IAAAC,KAAA,EAqBA,SAAAM,UAAUA,UAAiB;MACzB,IAAI,CAACF,KAAK,CAACG,IAAI,GAAGD,UAAS;MAC3B,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAcA,SAAAQ,WAAA,EAAuB;MAAA,IAAZR,KAAK,GAAAS,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;MACrB,IAAI,CAACL,KAAK,CAAC,aAAa,CAAC,GAAGJ,KAAK;MACjC,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAeA,SAAAY,cAAcC,KAAa;MACzB,IAAI,CAACT,KAAK,CAAC,gBAAgB,CAAC,GAAGS,KAAK;MACpC,OAAO,IAAI;IACb;EAAC;EAAA,OAAA1B,2BAAA;AAAA,EAtIsDD,WAAW;AAAA,SAA/CC,2BAA4B,IAAA2B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}