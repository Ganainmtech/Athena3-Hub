{"ast":null,"code":"import { parsePersonalSign, parseTransactionData, convertArrayBufferToHex, convertHexToArrayBuffer, getClientMeta, payloadId, uuid, formatRpcError, parseWalletConnectUri, convertNumberToHex, isJsonRpcResponseSuccess, isJsonRpcResponseError, isSilentPayload, getLocal, signingMethods, mobileLinkChoiceKey, isMobile, removeLocal } from \"@walletconnect/utils\";\nimport SocketTransport from \"@walletconnect/socket-transport\";\nimport { ERROR_SESSION_CONNECTED, ERROR_SESSION_DISCONNECTED, ERROR_SESSION_REJECTED, ERROR_MISSING_JSON_RPC, ERROR_MISSING_RESULT, ERROR_MISSING_ERROR, ERROR_MISSING_METHOD, ERROR_MISSING_ID, ERROR_INVALID_RESPONSE, ERROR_INVALID_URI, ERROR_MISSING_REQUIRED, ERROR_QRCODE_MODAL_NOT_PROVIDED, ERROR_QRCODE_MODAL_USER_CLOSED } from \"./errors\";\nimport EventManager from \"./events\";\nimport SessionStorage from \"./storage\";\nimport { getBridgeUrl } from \"./url\";\nclass Connector {\n  constructor(opts) {\n    this.protocol = \"wc\";\n    this.version = 1;\n    this._bridge = \"\";\n    this._key = null;\n    this._clientId = \"\";\n    this._clientMeta = null;\n    this._peerId = \"\";\n    this._peerMeta = null;\n    this._handshakeId = 0;\n    this._handshakeTopic = \"\";\n    this._connected = false;\n    this._accounts = [];\n    this._chainId = 0;\n    this._networkId = 0;\n    this._rpcUrl = \"\";\n    this._eventManager = new EventManager();\n    this._clientMeta = getClientMeta() || opts.connectorOpts.clientMeta || null;\n    this._cryptoLib = opts.cryptoLib;\n    this._sessionStorage = opts.sessionStorage || new SessionStorage(opts.connectorOpts.storageId);\n    this._qrcodeModal = opts.connectorOpts.qrcodeModal;\n    this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions;\n    this._signingMethods = [...signingMethods, ...(opts.connectorOpts.signingMethods || [])];\n    if (!opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session) {\n      throw new Error(ERROR_MISSING_REQUIRED);\n    }\n    if (opts.connectorOpts.bridge) {\n      this.bridge = getBridgeUrl(opts.connectorOpts.bridge);\n    }\n    if (opts.connectorOpts.uri) {\n      this.uri = opts.connectorOpts.uri;\n    }\n    const session = opts.connectorOpts.session || this._getStorageSession();\n    if (session) {\n      this.session = session;\n    }\n    if (this.handshakeId) {\n      this._subscribeToSessionResponse(this.handshakeId, \"Session request rejected\");\n    }\n    this._transport = opts.transport || new SocketTransport({\n      protocol: this.protocol,\n      version: this.version,\n      url: this.bridge,\n      subscriptions: [this.clientId]\n    });\n    this._subscribeToInternalEvents();\n    this._initTransport();\n    if (opts.connectorOpts.uri) {\n      this._subscribeToSessionRequest();\n    }\n    if (opts.pushServerOpts) {\n      this._registerPushServer(opts.pushServerOpts);\n    }\n  }\n  set bridge(value) {\n    if (!value) {\n      return;\n    }\n    this._bridge = value;\n  }\n  get bridge() {\n    return this._bridge;\n  }\n  set key(value) {\n    if (!value) {\n      return;\n    }\n    const key = convertHexToArrayBuffer(value);\n    this._key = key;\n  }\n  get key() {\n    if (this._key) {\n      const key = convertArrayBufferToHex(this._key, true);\n      return key;\n    }\n    return \"\";\n  }\n  set clientId(value) {\n    if (!value) {\n      return;\n    }\n    this._clientId = value;\n  }\n  get clientId() {\n    let clientId = this._clientId;\n    if (!clientId) {\n      clientId = this._clientId = uuid();\n    }\n    return this._clientId;\n  }\n  set peerId(value) {\n    if (!value) {\n      return;\n    }\n    this._peerId = value;\n  }\n  get peerId() {\n    return this._peerId;\n  }\n  set clientMeta(value) {}\n  get clientMeta() {\n    let clientMeta = this._clientMeta;\n    if (!clientMeta) {\n      clientMeta = this._clientMeta = getClientMeta();\n    }\n    return clientMeta;\n  }\n  set peerMeta(value) {\n    this._peerMeta = value;\n  }\n  get peerMeta() {\n    const peerMeta = this._peerMeta;\n    return peerMeta;\n  }\n  set handshakeTopic(value) {\n    if (!value) {\n      return;\n    }\n    this._handshakeTopic = value;\n  }\n  get handshakeTopic() {\n    return this._handshakeTopic;\n  }\n  set handshakeId(value) {\n    if (!value) {\n      return;\n    }\n    this._handshakeId = value;\n  }\n  get handshakeId() {\n    return this._handshakeId;\n  }\n  get uri() {\n    const _uri = this._formatUri();\n    return _uri;\n  }\n  set uri(value) {\n    if (!value) {\n      return;\n    }\n    const {\n      handshakeTopic,\n      bridge,\n      key\n    } = this._parseUri(value);\n    this.handshakeTopic = handshakeTopic;\n    this.bridge = bridge;\n    this.key = key;\n  }\n  set chainId(value) {\n    this._chainId = value;\n  }\n  get chainId() {\n    const chainId = this._chainId;\n    return chainId;\n  }\n  set networkId(value) {\n    this._networkId = value;\n  }\n  get networkId() {\n    const networkId = this._networkId;\n    return networkId;\n  }\n  set accounts(value) {\n    this._accounts = value;\n  }\n  get accounts() {\n    const accounts = this._accounts;\n    return accounts;\n  }\n  set rpcUrl(value) {\n    this._rpcUrl = value;\n  }\n  get rpcUrl() {\n    const rpcUrl = this._rpcUrl;\n    return rpcUrl;\n  }\n  set connected(value) {}\n  get connected() {\n    return this._connected;\n  }\n  set pending(value) {}\n  get pending() {\n    return !!this._handshakeTopic;\n  }\n  get session() {\n    return {\n      connected: this.connected,\n      accounts: this.accounts,\n      chainId: this.chainId,\n      bridge: this.bridge,\n      key: this.key,\n      clientId: this.clientId,\n      clientMeta: this.clientMeta,\n      peerId: this.peerId,\n      peerMeta: this.peerMeta,\n      handshakeId: this.handshakeId,\n      handshakeTopic: this.handshakeTopic\n    };\n  }\n  set session(value) {\n    if (!value) {\n      return;\n    }\n    this._connected = value.connected;\n    this.accounts = value.accounts;\n    this.chainId = value.chainId;\n    this.bridge = value.bridge;\n    this.key = value.key;\n    this.clientId = value.clientId;\n    this.clientMeta = value.clientMeta;\n    this.peerId = value.peerId;\n    this.peerMeta = value.peerMeta;\n    this.handshakeId = value.handshakeId;\n    this.handshakeTopic = value.handshakeTopic;\n  }\n  on(event, callback) {\n    const eventEmitter = {\n      event,\n      callback\n    };\n    this._eventManager.subscribe(eventEmitter);\n  }\n  off(event) {\n    this._eventManager.unsubscribe(event);\n  }\n  async createInstantRequest(instantRequest) {\n    this._key = await this._generateKey();\n    const request = this._formatRequest({\n      method: \"wc_instantRequest\",\n      params: [{\n        peerId: this.clientId,\n        peerMeta: this.clientMeta,\n        request: this._formatRequest(instantRequest)\n      }]\n    });\n    this.handshakeId = request.id;\n    this.handshakeTopic = uuid();\n    this._eventManager.trigger({\n      event: \"display_uri\",\n      params: [this.uri]\n    });\n    this.on(\"modal_closed\", () => {\n      throw new Error(ERROR_QRCODE_MODAL_USER_CLOSED);\n    });\n    const endInstantRequest = () => {\n      this.killSession();\n    };\n    try {\n      const result = await this._sendCallRequest(request);\n      if (result) {\n        endInstantRequest();\n      }\n      return result;\n    } catch (error) {\n      endInstantRequest();\n      throw error;\n    }\n  }\n  async connect(opts) {\n    if (!this._qrcodeModal) {\n      throw new Error(ERROR_QRCODE_MODAL_NOT_PROVIDED);\n    }\n    if (this.connected) {\n      return {\n        chainId: this.chainId,\n        accounts: this.accounts\n      };\n    }\n    await this.createSession(opts);\n    return new Promise(async (resolve, reject) => {\n      this.on(\"modal_closed\", () => reject(new Error(ERROR_QRCODE_MODAL_USER_CLOSED)));\n      this.on(\"connect\", (error, payload) => {\n        if (error) {\n          return reject(error);\n        }\n        resolve(payload.params[0]);\n      });\n    });\n  }\n  async createSession(opts) {\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n    if (this.pending) {\n      return;\n    }\n    this._key = await this._generateKey();\n    const request = this._formatRequest({\n      method: \"wc_sessionRequest\",\n      params: [{\n        peerId: this.clientId,\n        peerMeta: this.clientMeta,\n        chainId: opts && opts.chainId ? opts.chainId : null\n      }]\n    });\n    this.handshakeId = request.id;\n    this.handshakeTopic = uuid();\n    this._sendSessionRequest(request, \"Session update rejected\", {\n      topic: this.handshakeTopic\n    });\n    this._eventManager.trigger({\n      event: \"display_uri\",\n      params: [this.uri]\n    });\n  }\n  approveSession(sessionStatus) {\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n    this.chainId = sessionStatus.chainId;\n    this.accounts = sessionStatus.accounts;\n    this.networkId = sessionStatus.networkId || 0;\n    this.rpcUrl = sessionStatus.rpcUrl || \"\";\n    const sessionParams = {\n      approved: true,\n      chainId: this.chainId,\n      networkId: this.networkId,\n      accounts: this.accounts,\n      rpcUrl: this.rpcUrl,\n      peerId: this.clientId,\n      peerMeta: this.clientMeta\n    };\n    const response = {\n      id: this.handshakeId,\n      jsonrpc: \"2.0\",\n      result: sessionParams\n    };\n    this._sendResponse(response);\n    this._connected = true;\n    this._setStorageSession();\n    this._eventManager.trigger({\n      event: \"connect\",\n      params: [{\n        peerId: this.peerId,\n        peerMeta: this.peerMeta,\n        chainId: this.chainId,\n        accounts: this.accounts\n      }]\n    });\n  }\n  rejectSession(sessionError) {\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n    const message = sessionError && sessionError.message ? sessionError.message : ERROR_SESSION_REJECTED;\n    const response = this._formatResponse({\n      id: this.handshakeId,\n      error: {\n        message\n      }\n    });\n    this._sendResponse(response);\n    this._connected = false;\n    this._eventManager.trigger({\n      event: \"disconnect\",\n      params: [{\n        message\n      }]\n    });\n    this._removeStorageSession();\n  }\n  updateSession(sessionStatus) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n    this.chainId = sessionStatus.chainId;\n    this.accounts = sessionStatus.accounts;\n    this.networkId = sessionStatus.networkId || 0;\n    this.rpcUrl = sessionStatus.rpcUrl || \"\";\n    const sessionParams = {\n      approved: true,\n      chainId: this.chainId,\n      networkId: this.networkId,\n      accounts: this.accounts,\n      rpcUrl: this.rpcUrl\n    };\n    const request = this._formatRequest({\n      method: \"wc_sessionUpdate\",\n      params: [sessionParams]\n    });\n    this._sendSessionRequest(request, \"Session update rejected\");\n    this._eventManager.trigger({\n      event: \"session_update\",\n      params: [{\n        chainId: this.chainId,\n        accounts: this.accounts\n      }]\n    });\n    this._manageStorageSession();\n  }\n  async killSession(sessionError) {\n    const message = sessionError ? sessionError.message : \"Session Disconnected\";\n    const sessionParams = {\n      approved: false,\n      chainId: null,\n      networkId: null,\n      accounts: null\n    };\n    const request = this._formatRequest({\n      method: \"wc_sessionUpdate\",\n      params: [sessionParams]\n    });\n    await this._sendRequest(request);\n    this._handleSessionDisconnect(message);\n  }\n  async sendTransaction(tx) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n    const parsedTx = parseTransactionData(tx);\n    const request = this._formatRequest({\n      method: \"eth_sendTransaction\",\n      params: [parsedTx]\n    });\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n  async signTransaction(tx) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n    const parsedTx = parseTransactionData(tx);\n    const request = this._formatRequest({\n      method: \"eth_signTransaction\",\n      params: [parsedTx]\n    });\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n  async signMessage(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n    const request = this._formatRequest({\n      method: \"eth_sign\",\n      params\n    });\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n  async signPersonalMessage(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n    params = parsePersonalSign(params);\n    const request = this._formatRequest({\n      method: \"personal_sign\",\n      params\n    });\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n  async signTypedData(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n    const request = this._formatRequest({\n      method: \"eth_signTypedData\",\n      params\n    });\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n  async updateChain(chainParams) {\n    if (!this._connected) {\n      throw new Error(\"Session currently disconnected\");\n    }\n    const request = this._formatRequest({\n      method: \"wallet_updateChain\",\n      params: [chainParams]\n    });\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n  unsafeSend(request, options) {\n    this._sendRequest(request, options);\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n    return new Promise((resolve, reject) => {\n      this._subscribeToResponse(request.id, (error, payload) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        if (!payload) {\n          throw new Error(ERROR_MISSING_JSON_RPC);\n        }\n        resolve(payload);\n      });\n    });\n  }\n  async sendCustomRequest(request, options) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n    switch (request.method) {\n      case \"eth_accounts\":\n        return this.accounts;\n      case \"eth_chainId\":\n        return convertNumberToHex(this.chainId);\n      case \"eth_sendTransaction\":\n      case \"eth_signTransaction\":\n        if (request.params) {\n          request.params[0] = parseTransactionData(request.params[0]);\n        }\n        break;\n      case \"personal_sign\":\n        if (request.params) {\n          request.params = parsePersonalSign(request.params);\n        }\n        break;\n      default:\n        break;\n    }\n    const formattedRequest = this._formatRequest(request);\n    const result = await this._sendCallRequest(formattedRequest, options);\n    return result;\n  }\n  approveRequest(response) {\n    if (isJsonRpcResponseSuccess(response)) {\n      const formattedResponse = this._formatResponse(response);\n      this._sendResponse(formattedResponse);\n    } else {\n      throw new Error(ERROR_MISSING_RESULT);\n    }\n  }\n  rejectRequest(response) {\n    if (isJsonRpcResponseError(response)) {\n      const formattedResponse = this._formatResponse(response);\n      this._sendResponse(formattedResponse);\n    } else {\n      throw new Error(ERROR_MISSING_ERROR);\n    }\n  }\n  transportClose() {\n    this._transport.close();\n  }\n  async _sendRequest(request, options) {\n    const callRequest = this._formatRequest(request);\n    const encryptionPayload = await this._encrypt(callRequest);\n    const topic = typeof (options === null || options === void 0 ? void 0 : options.topic) !== \"undefined\" ? options.topic : this.peerId;\n    const payload = JSON.stringify(encryptionPayload);\n    const silent = typeof (options === null || options === void 0 ? void 0 : options.forcePushNotification) !== \"undefined\" ? !options.forcePushNotification : isSilentPayload(callRequest);\n    this._transport.send(payload, topic, silent);\n  }\n  async _sendResponse(response) {\n    const encryptionPayload = await this._encrypt(response);\n    const topic = this.peerId;\n    const payload = JSON.stringify(encryptionPayload);\n    const silent = true;\n    this._transport.send(payload, topic, silent);\n  }\n  async _sendSessionRequest(request, errorMsg, options) {\n    this._sendRequest(request, options);\n    this._subscribeToSessionResponse(request.id, errorMsg);\n  }\n  _sendCallRequest(request, options) {\n    this._sendRequest(request, options);\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n    return this._subscribeToCallResponse(request.id);\n  }\n  _formatRequest(request) {\n    if (typeof request.method === \"undefined\") {\n      throw new Error(ERROR_MISSING_METHOD);\n    }\n    const formattedRequest = {\n      id: typeof request.id === \"undefined\" ? payloadId() : request.id,\n      jsonrpc: \"2.0\",\n      method: request.method,\n      params: typeof request.params === \"undefined\" ? [] : request.params\n    };\n    return formattedRequest;\n  }\n  _formatResponse(response) {\n    if (typeof response.id === \"undefined\") {\n      throw new Error(ERROR_MISSING_ID);\n    }\n    const baseResponse = {\n      id: response.id,\n      jsonrpc: \"2.0\"\n    };\n    if (isJsonRpcResponseError(response)) {\n      const error = formatRpcError(response.error);\n      const errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), {\n        error\n      });\n      return errorResponse;\n    } else if (isJsonRpcResponseSuccess(response)) {\n      const successResponse = Object.assign(Object.assign({}, baseResponse), response);\n      return successResponse;\n    }\n    throw new Error(ERROR_INVALID_RESPONSE);\n  }\n  _handleSessionDisconnect(errorMsg) {\n    const message = errorMsg || \"Session Disconnected\";\n    if (!this._connected) {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.close();\n      }\n      removeLocal(mobileLinkChoiceKey);\n    }\n    if (this._connected) {\n      this._connected = false;\n    }\n    if (this._handshakeId) {\n      this._handshakeId = 0;\n    }\n    if (this._handshakeTopic) {\n      this._handshakeTopic = \"\";\n    }\n    if (this._peerId) {\n      this._peerId = \"\";\n    }\n    this._eventManager.trigger({\n      event: \"disconnect\",\n      params: [{\n        message\n      }]\n    });\n    this._removeStorageSession();\n    this.transportClose();\n  }\n  _handleSessionResponse(errorMsg, sessionParams) {\n    if (sessionParams) {\n      if (sessionParams.approved) {\n        if (!this._connected) {\n          this._connected = true;\n          if (sessionParams.chainId) {\n            this.chainId = sessionParams.chainId;\n          }\n          if (sessionParams.accounts) {\n            this.accounts = sessionParams.accounts;\n          }\n          if (sessionParams.peerId && !this.peerId) {\n            this.peerId = sessionParams.peerId;\n          }\n          if (sessionParams.peerMeta && !this.peerMeta) {\n            this.peerMeta = sessionParams.peerMeta;\n          }\n          this._eventManager.trigger({\n            event: \"connect\",\n            params: [{\n              peerId: this.peerId,\n              peerMeta: this.peerMeta,\n              chainId: this.chainId,\n              accounts: this.accounts\n            }]\n          });\n        } else {\n          if (sessionParams.chainId) {\n            this.chainId = sessionParams.chainId;\n          }\n          if (sessionParams.accounts) {\n            this.accounts = sessionParams.accounts;\n          }\n          this._eventManager.trigger({\n            event: \"session_update\",\n            params: [{\n              chainId: this.chainId,\n              accounts: this.accounts\n            }]\n          });\n        }\n        this._manageStorageSession();\n      } else {\n        this._handleSessionDisconnect(errorMsg);\n      }\n    } else {\n      this._handleSessionDisconnect(errorMsg);\n    }\n  }\n  async _handleIncomingMessages(socketMessage) {\n    const activeTopics = [this.clientId, this.handshakeTopic];\n    if (!activeTopics.includes(socketMessage.topic)) {\n      return;\n    }\n    let encryptionPayload;\n    try {\n      encryptionPayload = JSON.parse(socketMessage.payload);\n    } catch (error) {\n      return;\n    }\n    const payload = await this._decrypt(encryptionPayload);\n    if (payload) {\n      this._eventManager.trigger(payload);\n    }\n  }\n  _subscribeToSessionRequest() {\n    this._transport.subscribe(this.handshakeTopic);\n  }\n  _subscribeToResponse(id, callback) {\n    this.on(`response:${id}`, callback);\n  }\n  _subscribeToSessionResponse(id, errorMsg) {\n    this._subscribeToResponse(id, (error, payload) => {\n      if (error) {\n        this._handleSessionResponse(error.message);\n        return;\n      }\n      if (isJsonRpcResponseSuccess(payload)) {\n        this._handleSessionResponse(errorMsg, payload.result);\n      } else if (payload.error && payload.error.message) {\n        this._handleSessionResponse(payload.error.message);\n      } else {\n        this._handleSessionResponse(errorMsg);\n      }\n    });\n  }\n  _subscribeToCallResponse(id) {\n    return new Promise((resolve, reject) => {\n      this._subscribeToResponse(id, (error, payload) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        if (isJsonRpcResponseSuccess(payload)) {\n          resolve(payload.result);\n        } else if (payload.error && payload.error.message) {\n          reject(payload.error);\n        } else {\n          reject(new Error(ERROR_INVALID_RESPONSE));\n        }\n      });\n    });\n  }\n  _subscribeToInternalEvents() {\n    this.on(\"display_uri\", () => {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.open(this.uri, () => {\n          this._eventManager.trigger({\n            event: \"modal_closed\",\n            params: []\n          });\n        }, this._qrcodeModalOptions);\n      }\n    });\n    this.on(\"connect\", () => {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.close();\n      }\n    });\n    this.on(\"call_request_sent\", (error, payload) => {\n      const {\n        request\n      } = payload.params[0];\n      if (isMobile() && this._signingMethods.includes(request.method)) {\n        const mobileLinkUrl = getLocal(mobileLinkChoiceKey);\n        if (mobileLinkUrl) {\n          window.location.href = mobileLinkUrl.href;\n        }\n      }\n    });\n    this.on(\"wc_sessionRequest\", (error, payload) => {\n      if (error) {\n        this._eventManager.trigger({\n          event: \"error\",\n          params: [{\n            code: \"SESSION_REQUEST_ERROR\",\n            message: error.toString()\n          }]\n        });\n      }\n      this.handshakeId = payload.id;\n      this.peerId = payload.params[0].peerId;\n      this.peerMeta = payload.params[0].peerMeta;\n      const internalPayload = Object.assign(Object.assign({}, payload), {\n        method: \"session_request\"\n      });\n      this._eventManager.trigger(internalPayload);\n    });\n    this.on(\"wc_sessionUpdate\", (error, payload) => {\n      if (error) {\n        this._handleSessionResponse(error.message);\n      }\n      this._handleSessionResponse(\"Session disconnected\", payload.params[0]);\n    });\n  }\n  _initTransport() {\n    this._transport.on(\"message\", socketMessage => this._handleIncomingMessages(socketMessage));\n    this._transport.on(\"open\", () => this._eventManager.trigger({\n      event: \"transport_open\",\n      params: []\n    }));\n    this._transport.on(\"close\", () => this._eventManager.trigger({\n      event: \"transport_close\",\n      params: []\n    }));\n    this._transport.on(\"error\", () => this._eventManager.trigger({\n      event: \"transport_error\",\n      params: [\"Websocket connection failed\"]\n    }));\n    this._transport.open();\n  }\n  _formatUri() {\n    const protocol = this.protocol;\n    const handshakeTopic = this.handshakeTopic;\n    const version = this.version;\n    const bridge = encodeURIComponent(this.bridge);\n    const key = this.key;\n    const uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}`;\n    return uri;\n  }\n  _parseUri(uri) {\n    const result = parseWalletConnectUri(uri);\n    if (result.protocol === this.protocol) {\n      if (!result.handshakeTopic) {\n        throw Error(\"Invalid or missing handshakeTopic parameter value\");\n      }\n      const handshakeTopic = result.handshakeTopic;\n      if (!result.bridge) {\n        throw Error(\"Invalid or missing bridge url parameter value\");\n      }\n      const bridge = decodeURIComponent(result.bridge);\n      if (!result.key) {\n        throw Error(\"Invalid or missing key parameter value\");\n      }\n      const key = result.key;\n      return {\n        handshakeTopic,\n        bridge,\n        key\n      };\n    } else {\n      throw new Error(ERROR_INVALID_URI);\n    }\n  }\n  async _generateKey() {\n    if (this._cryptoLib) {\n      const result = await this._cryptoLib.generateKey();\n      return result;\n    }\n    return null;\n  }\n  async _encrypt(data) {\n    const key = this._key;\n    if (this._cryptoLib && key) {\n      const result = await this._cryptoLib.encrypt(data, key);\n      return result;\n    }\n    return null;\n  }\n  async _decrypt(payload) {\n    const key = this._key;\n    if (this._cryptoLib && key) {\n      const result = await this._cryptoLib.decrypt(payload, key);\n      return result;\n    }\n    return null;\n  }\n  _getStorageSession() {\n    let result = null;\n    if (this._sessionStorage) {\n      result = this._sessionStorage.getSession();\n    }\n    return result;\n  }\n  _setStorageSession() {\n    if (this._sessionStorage) {\n      this._sessionStorage.setSession(this.session);\n    }\n  }\n  _removeStorageSession() {\n    if (this._sessionStorage) {\n      this._sessionStorage.removeSession();\n    }\n  }\n  _manageStorageSession() {\n    if (this._connected) {\n      this._setStorageSession();\n    } else {\n      this._removeStorageSession();\n    }\n  }\n  _registerPushServer(pushServerOpts) {\n    if (!pushServerOpts.url || typeof pushServerOpts.url !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.url parameter value\");\n    }\n    if (!pushServerOpts.type || typeof pushServerOpts.type !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.type parameter value\");\n    }\n    if (!pushServerOpts.token || typeof pushServerOpts.token !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.token parameter value\");\n    }\n    const pushSubscription = {\n      bridge: this.bridge,\n      topic: this.clientId,\n      type: pushServerOpts.type,\n      token: pushServerOpts.token,\n      peerName: \"\",\n      language: pushServerOpts.language || \"\"\n    };\n    this.on(\"connect\", async (error, payload) => {\n      if (error) {\n        throw error;\n      }\n      if (pushServerOpts.peerMeta) {\n        const peerName = payload.params[0].peerMeta.name;\n        pushSubscription.peerName = peerName;\n      }\n      try {\n        const response = await fetch(`${pushServerOpts.url}/new`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(pushSubscription)\n        });\n        const json = await response.json();\n        if (!json.success) {\n          throw Error(\"Failed to register in Push Server\");\n        }\n      } catch (error) {\n        throw Error(\"Failed to register in Push Server\");\n      }\n    });\n  }\n}\nexport default Connector;","map":{"version":3,"names":["parsePersonalSign","parseTransactionData","convertArrayBufferToHex","convertHexToArrayBuffer","getClientMeta","payloadId","uuid","formatRpcError","parseWalletConnectUri","convertNumberToHex","isJsonRpcResponseSuccess","isJsonRpcResponseError","isSilentPayload","getLocal","signingMethods","mobileLinkChoiceKey","isMobile","removeLocal","SocketTransport","ERROR_SESSION_CONNECTED","ERROR_SESSION_DISCONNECTED","ERROR_SESSION_REJECTED","ERROR_MISSING_JSON_RPC","ERROR_MISSING_RESULT","ERROR_MISSING_ERROR","ERROR_MISSING_METHOD","ERROR_MISSING_ID","ERROR_INVALID_RESPONSE","ERROR_INVALID_URI","ERROR_MISSING_REQUIRED","ERROR_QRCODE_MODAL_NOT_PROVIDED","ERROR_QRCODE_MODAL_USER_CLOSED","EventManager","SessionStorage","getBridgeUrl","Connector","constructor","opts","protocol","version","_bridge","_key","_clientId","_clientMeta","_peerId","_peerMeta","_handshakeId","_handshakeTopic","_connected","_accounts","_chainId","_networkId","_rpcUrl","_eventManager","connectorOpts","clientMeta","_cryptoLib","cryptoLib","_sessionStorage","sessionStorage","storageId","_qrcodeModal","qrcodeModal","_qrcodeModalOptions","qrcodeModalOptions","_signingMethods","bridge","uri","session","Error","_getStorageSession","handshakeId","_subscribeToSessionResponse","_transport","transport","url","subscriptions","clientId","_subscribeToInternalEvents","_initTransport","_subscribeToSessionRequest","pushServerOpts","_registerPushServer","value","key","peerId","peerMeta","handshakeTopic","_uri","_formatUri","_parseUri","chainId","networkId","accounts","rpcUrl","connected","pending","on","event","callback","eventEmitter","subscribe","off","unsubscribe","createInstantRequest","instantRequest","_generateKey","request","_formatRequest","method","params","id","trigger","endInstantRequest","killSession","result","_sendCallRequest","error","connect","createSession","Promise","resolve","reject","payload","_sendSessionRequest","topic","approveSession","sessionStatus","sessionParams","approved","response","jsonrpc","_sendResponse","_setStorageSession","rejectSession","sessionError","message","_formatResponse","_removeStorageSession","updateSession","_manageStorageSession","_sendRequest","_handleSessionDisconnect","sendTransaction","tx","parsedTx","signTransaction","signMessage","signPersonalMessage","signTypedData","updateChain","chainParams","unsafeSend","options","_subscribeToResponse","sendCustomRequest","formattedRequest","approveRequest","formattedResponse","rejectRequest","transportClose","close","callRequest","encryptionPayload","_encrypt","JSON","stringify","silent","forcePushNotification","send","errorMsg","_subscribeToCallResponse","baseResponse","errorResponse","Object","assign","successResponse","_handleSessionResponse","_handleIncomingMessages","socketMessage","activeTopics","includes","parse","_decrypt","open","mobileLinkUrl","window","location","href","code","toString","internalPayload","encodeURIComponent","decodeURIComponent","generateKey","data","encrypt","decrypt","getSession","setSession","removeSession","type","token","pushSubscription","peerName","language","name","fetch","headers","Accept","body","json","success"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}