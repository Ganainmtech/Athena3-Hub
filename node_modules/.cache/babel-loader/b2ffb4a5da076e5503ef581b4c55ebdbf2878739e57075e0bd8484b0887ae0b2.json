{"ast":null,"code":"import _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport JSONRequest from '../jsonrequest';\n/**\n * Returns information about indexed applications.\n *\n * #### Example\n * ```typescript\n * const apps = await indexerClient.searchForApplications().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applications)\n * @category GET\n */\nvar SearchForApplications = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(SearchForApplications, _JSONRequest);\n  var _super = _createSuper(SearchForApplications);\n  function SearchForApplications() {\n    _classCallCheck(this, SearchForApplications);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SearchForApplications, [{\n    key: \"path\",\n    value:\n    /**\n     * @returns `/v2/applications`\n     */\n    // eslint-disable-next-line class-methods-use-this\n    function path() {\n      return '/v2/applications';\n    }\n    /**\n     * Application ID for filter, as int\n     *\n     * #### Example\n     * ```typescript\n     * const appId = 60553466;\n     * const apps = await indexerClient\n     *        .searchForApplications()\n     *        .index(appId)\n     *        .do();\n     * ```\n     * @remarks Alternatively, use `indexerClient.lookupApplications(appId).do()`\n     * @param index\n     * @category query\n     */\n  }, {\n    key: \"index\",\n    value: function index(_index) {\n      this.query['application-id'] = _index;\n      return this;\n    }\n    /**\n     * Creator for filter, as string\n     *\n     * #### Example\n     * ```typescript\n     * const creator = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n     * const apps = await indexerClient\n     *        .searchForApplications()\n     *        .creator(creator)\n     *        .do();\n     * ```\n     * @param creator\n     * @category query\n     */\n  }, {\n    key: \"creator\",\n    value: function creator(_creator) {\n      this.query.creator = _creator;\n      return this;\n    }\n    /**\n     * Specify the next page of results.\n     *\n     * #### Example\n     * ```typescript\n     * const maxResults = 20;\n     *\n     * const appsPage1 = await indexerClient\n     *        .searchForApplications()\n     *        .limit(maxResults)\n     *        .do();\n     *\n     * const appsPage2 = await indexerClient\n     *        .searchForApplications()\n     *        .limit(maxResults)\n     *        .nextToken(appsPage1[\"next-token\"])\n     *        .do();\n     * ```\n     * @param nextToken - provided by the previous results.\n     * @category query\n     */\n  }, {\n    key: \"nextToken\",\n    value: function nextToken(next) {\n      this.query.next = next;\n      return this;\n    }\n    /**\n     * Limit results for pagination.\n     *\n     * #### Example\n     * ```typescript\n     * const maxResults = 20;\n     * const apps = await indexerClient\n     *        .searchForApplications()\n     *        .limit(maxResults)\n     *        .do();\n     * ```\n     *\n     * @param limit - maximum number of results to return.\n     * @category query\n     */\n  }, {\n    key: \"limit\",\n    value: function limit(_limit) {\n      this.query.limit = _limit;\n      return this;\n    }\n    /**\n     * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n     *\n     * #### Example 1\n     * ```typescript\n     * const apps = await indexerClient\n     *        .searchForApplications()\n     *        .includeAll(false)\n     *        .do();\n     * ```\n     *\n     * #### Example 2\n     * ```typescript\n     * const apps = await indexerClient\n     *        .searchForApplications()\n     *        .includeAll()\n     *        .do();\n     * ```\n     *\n     * @param value - default true when called without passing a value\n     * @category query\n     */\n  }, {\n    key: \"includeAll\",\n    value: function includeAll() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.query['include-all'] = value;\n      return this;\n    }\n  }]);\n  return SearchForApplications;\n}(JSONRequest);\nexport { SearchForApplications as default };","map":{"version":3,"names":["JSONRequest","SearchForApplications","_JSONRequest","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","path","index","query","creator","nextToken","next","limit","includeAll","length","undefined","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/indexer/searchForApplications.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\n\n/**\n * Returns information about indexed applications.\n *\n * #### Example\n * ```typescript\n * const apps = await indexerClient.searchForApplications().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applications)\n * @category GET\n */\nexport default class SearchForApplications extends JSONRequest {\n  /**\n   * @returns `/v2/applications`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/applications';\n  }\n\n  /**\n   * Application ID for filter, as int\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .index(appId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupApplications(appId).do()`\n   * @param index\n   * @category query\n   */\n  index(index: number) {\n    this.query['application-id'] = index;\n    return this;\n  }\n\n  /**\n   * Creator for filter, as string\n   *\n   * #### Example\n   * ```typescript\n   * const creator = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .creator(creator)\n   *        .do();\n   * ```\n   * @param creator\n   * @category query\n   */\n  creator(creator: string) {\n    this.query.creator = creator;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   *\n   * const appsPage1 = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const appsPage2 = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .nextToken(appsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(next: string) {\n    this.query.next = next;\n    return this;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAExC;;;;;;;;;;;AAAA,IAWqBC,qBAAsB,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,qBAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,qBAAA;EAAA,SAAAA,sBAAA;IAAAK,eAAA,OAAAL,qBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,qBAAA;IAAAS,GAAA;IAAAC,KAAA;IACzC;;;IAGA;IACA,SAAAC,KAAA,EAAI;MACF,OAAO,kBAAkB;IAC3B;IAEA;;;;;;;;;;;;;;;EAAA;IAAAF,GAAA;IAAAC,KAAA,EAeA,SAAAE,MAAMA,MAAa;MACjB,IAAI,CAACC,KAAK,CAAC,gBAAgB,CAAC,GAAGD,MAAK;MACpC,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAcA,SAAAI,QAAQA,QAAe;MACrB,IAAI,CAACD,KAAK,CAACC,OAAO,GAAGA,QAAO;MAC5B,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;;;;;;;EAAA;IAAAL,GAAA;IAAAC,KAAA,EAqBA,SAAAK,UAAUC,IAAY;MACpB,IAAI,CAACH,KAAK,CAACG,IAAI,GAAGA,IAAI;MACtB,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAeA,SAAAO,MAAMA,MAAa;MACjB,IAAI,CAACJ,KAAK,CAACI,KAAK,GAAGA,MAAK;MACxB,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;;;;;;;;EAAA;IAAAR,GAAA;IAAAC,KAAA,EAsBA,SAAAQ,WAAA,EAAuB;MAAA,IAAZR,KAAK,GAAAH,SAAA,CAAAY,MAAA,QAAAZ,SAAA,QAAAa,SAAA,GAAAb,SAAA,MAAG,IAAI;MACrB,IAAI,CAACM,KAAK,CAAC,aAAa,CAAC,GAAGH,KAAK;MACjC,OAAO,IAAI;IACb;EAAC;EAAA,OAAAV,qBAAA;AAAA,EAvHgDD,WAAW;AAAA,SAAzCC,qBAAsB,IAAAqB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}