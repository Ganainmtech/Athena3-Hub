{"ast":null,"code":"import * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\n/**\n * generateAccount returns a new Algorand address and its corresponding secret key\n */\nexport default function generateAccount() {\n  const keys = nacl.keyPair();\n  const encodedPk = address.encodeAddress(keys.publicKey);\n  return {\n    addr: encodedPk,\n    sk: keys.secretKey\n  };\n}","map":{"version":3,"names":["nacl","address","generateAccount","keys","keyPair","encodedPk","encodeAddress","publicKey","addr","sk","secretKey"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/node_modules/algosdk/src/account.ts"],"sourcesContent":["import * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport Account from './types/account';\n\n/**\n * generateAccount returns a new Algorand address and its corresponding secret key\n */\nexport default function generateAccount(): Account {\n  const keys = nacl.keyPair();\n  const encodedPk = address.encodeAddress(keys.publicKey);\n  return { addr: encodedPk, sk: keys.secretKey };\n}\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,qBAAqB;AAC3C,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAG7C;;;AAGA,eAAc,SAAUC,eAAeA,CAAA;EACrC,MAAMC,IAAI,GAAGH,IAAI,CAACI,OAAO,EAAE;EAC3B,MAAMC,SAAS,GAAGJ,OAAO,CAACK,aAAa,CAACH,IAAI,CAACI,SAAS,CAAC;EACvD,OAAO;IAAEC,IAAI,EAAEH,SAAS;IAAEI,EAAE,EAAEN,IAAI,CAACO;EAAS,CAAE;AAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}