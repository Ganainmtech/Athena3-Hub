{"ast":null,"code":"import _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport { Box } from './models/types';\nvar LookupApplicationBoxByIDandName = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(LookupApplicationBoxByIDandName, _JSONRequest);\n  var _super = _createSuper(LookupApplicationBoxByIDandName);\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const boxName = Buffer.from(\"foo\");\n   * const boxResponse = await indexerClient\n   *        .LookupApplicationBoxByIDandName(1234, boxName)\n   *        .do();\n   * const boxValue = boxResponse.value;\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idbox)\n   * @oaram index - application index.\n   * @category GET\n   */\n  function LookupApplicationBoxByIDandName(c, intDecoding, index, boxName) {\n    var _this;\n    _classCallCheck(this, LookupApplicationBoxByIDandName);\n    _this = _super.call(this, c, intDecoding);\n    _this.index = index;\n    _this.index = index;\n    // Encode query in base64 format and append the encoding prefix.\n    var encodedName = Buffer.from(boxName).toString('base64');\n    _this.query.name = encodeURI(\"b64:\".concat(encodedName));\n    return _this;\n  }\n  /**\n   * @returns `/v2/applications/${index}/box`\n   */\n  _createClass(LookupApplicationBoxByIDandName, [{\n    key: \"path\",\n    value: function path() {\n      return \"/v2/applications/\".concat(this.index, \"/box\");\n    }\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"prepare\",\n    value: function prepare(body) {\n      return Box.from_obj_for_encoding(body);\n    }\n  }]);\n  return LookupApplicationBoxByIDandName;\n}(JSONRequest);\nexport { LookupApplicationBoxByIDandName as default };","map":{"version":3,"names":["Buffer","JSONRequest","Box","LookupApplicationBoxByIDandName","_JSONRequest","_inherits","_super","_createSuper","c","intDecoding","index","boxName","_this","_classCallCheck","call","encodedName","from","toString","query","name","encodeURI","concat","_createClass","key","value","path","prepare","body","from_obj_for_encoding","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/indexer/lookupApplicationBoxByIDandName.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { Box } from './models/types';\n\nexport default class LookupApplicationBoxByIDandName extends JSONRequest<\n  Box,\n  Record<string, any>\n> {\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const boxName = Buffer.from(\"foo\");\n   * const boxResponse = await indexerClient\n   *        .LookupApplicationBoxByIDandName(1234, boxName)\n   *        .do();\n   * const boxValue = boxResponse.value;\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idbox)\n   * @oaram index - application index.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private index: number,\n    boxName: Uint8Array\n  ) {\n    super(c, intDecoding);\n    this.index = index;\n    // Encode query in base64 format and append the encoding prefix.\n    const encodedName = Buffer.from(boxName).toString('base64');\n    this.query.name = encodeURI(`b64:${encodedName}`);\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/box`\n   */\n  path() {\n    return `/v2/applications/${this.index}/box`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): Box {\n    return Box.from_obj_for_encoding(body);\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,WAAW,MAAM,gBAAgB;AAGxC,SAASC,GAAG,QAAQ,gBAAgB;AAAC,IAEhBC,+BAAgC,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,+BAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,+BAAA;EAInD;;;;;;;;;;;;;;;;EAgBA,SAAAA,gCACEK,CAAa,EACbC,WAAwB,EAChBC,KAAa,EACrBC,OAAmB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAV,+BAAA;IAEnBS,KAAA,GAAAN,MAAA,CAAAQ,IAAA,OAAMN,CAAC,EAAEC,WAAW;IAHZG,KAAA,CAAAF,KAAK,GAALA,KAAK;IAIbE,KAAA,CAAKF,KAAK,GAAGA,KAAK;IAClB;IACA,IAAMK,WAAW,GAAGf,MAAM,CAACgB,IAAI,CAACL,OAAO,CAAC,CAACM,QAAQ,CAAC,QAAQ,CAAC;IAC3DL,KAAA,CAAKM,KAAK,CAACC,IAAI,GAAGC,SAAS,QAAAC,MAAA,CAAQN,WAAW,CAAE,CAAC;IAAC,OAAAH,KAAA;EACpD;EAEA;;;EAAAU,YAAA,CAAAnB,+BAAA;IAAAoB,GAAA;IAAAC,KAAA,EAGA,SAAAC,KAAA,EAAI;MACF,2BAAAJ,MAAA,CAA2B,IAAI,CAACX,KAAK;IACvC;IAEA;EAAA;IAAAa,GAAA;IAAAC,KAAA,EACA,SAAAE,QAAQC,IAAyB;MAC/B,OAAOzB,GAAG,CAAC0B,qBAAqB,CAACD,IAAI,CAAC;IACxC;EAAC;EAAA,OAAAxB,+BAAA;AAAA,EA3C0DF,WAG5D;AAAA,SAHoBE,+BAAgC,IAAA0B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}