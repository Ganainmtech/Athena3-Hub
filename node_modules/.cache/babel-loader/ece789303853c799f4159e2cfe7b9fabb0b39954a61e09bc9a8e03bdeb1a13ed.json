{"ast":null,"code":"import _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport JSONRequest from '../jsonrequest';\nvar GetBlockHash = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(GetBlockHash, _JSONRequest);\n  var _super = _createSuper(GetBlockHash);\n  function GetBlockHash(c, intDecoding, roundNumber) {\n    var _this;\n    _classCallCheck(this, GetBlockHash);\n    _this = _super.call(this, c, intDecoding);\n    if (!Number.isInteger(roundNumber)) throw Error('roundNumber should be an integer');\n    _this.round = roundNumber;\n    return _this;\n  }\n  _createClass(GetBlockHash, [{\n    key: \"path\",\n    value: function path() {\n      return \"/v2/blocks/\".concat(this.round, \"/hash\");\n    }\n  }]);\n  return GetBlockHash;\n}(JSONRequest);\nexport { GetBlockHash as default };","map":{"version":3,"names":["JSONRequest","GetBlockHash","_JSONRequest","_inherits","_super","_createSuper","c","intDecoding","roundNumber","_this","_classCallCheck","call","Number","isInteger","Error","round","_createClass","key","value","path","concat","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/algod/getBlockHash.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetBlockHash extends JSONRequest {\n  round: number;\n\n  constructor(c: HTTPClient, intDecoding: IntDecoding, roundNumber: number) {\n    super(c, intDecoding);\n    if (!Number.isInteger(roundNumber))\n      throw Error('roundNumber should be an integer');\n    this.round = roundNumber;\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}/hash`;\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAAC,IAIpBC,YAAa,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAGhC,SAAAA,aAAYK,CAAa,EAAEC,WAAwB,EAAEC,WAAmB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,YAAA;IACtEQ,KAAA,GAAAL,MAAA,CAAAO,IAAA,OAAML,CAAC,EAAEC,WAAW;IACpB,IAAI,CAACK,MAAM,CAACC,SAAS,CAACL,WAAW,CAAC,EAChC,MAAMM,KAAK,CAAC,kCAAkC,CAAC;IACjDL,KAAA,CAAKM,KAAK,GAAGP,WAAW;IAAC,OAAAC,KAAA;EAC3B;EAACO,YAAA,CAAAf,YAAA;IAAAgB,GAAA;IAAAC,KAAA,EAED,SAAAC,KAAA,EAAI;MACF,qBAAAC,MAAA,CAAqB,IAAI,CAACL,KAAK;IACjC;EAAC;EAAA,OAAAd,YAAA;AAAA,EAZuCD,WAAW;AAAA,SAAhCC,YAAa,IAAAoB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}