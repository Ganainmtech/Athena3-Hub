{"ast":null,"code":"import _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport JSONRequest from '../jsonrequest';\nvar GetTransactionProof = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(GetTransactionProof, _JSONRequest);\n  var _super = _createSuper(GetTransactionProof);\n  function GetTransactionProof(c, intDecoding, round, txID) {\n    var _this;\n    _classCallCheck(this, GetTransactionProof);\n    _this = _super.call(this, c, intDecoding);\n    _this.round = round;\n    _this.txID = txID;\n    _this.round = round;\n    _this.txID = txID;\n    return _this;\n  }\n  _createClass(GetTransactionProof, [{\n    key: \"path\",\n    value: function path() {\n      return \"/v2/blocks/\".concat(this.round, \"/transactions/\").concat(this.txID, \"/proof\");\n    }\n    /**\n     * Exclude assets and application data from results\n     * The type of hash function used to create the proof, must be one of: \"sha512_256\", \"sha256\"\n     *\n     * #### Example\n     * ```typescript\n     * const hashType = \"sha256\";\n     * const round = 123456;\n     * const txId = \"abc123;\n     * const txProof = await algodClient.getTransactionProof(round, txId)\n     *        .hashType(hashType)\n     *        .do();\n     * ```\n     *\n     * @param hashType\n     * @category query\n     */\n  }, {\n    key: \"hashType\",\n    value: function hashType(_hashType) {\n      this.query.hashtype = _hashType;\n      return this;\n    }\n  }]);\n  return GetTransactionProof;\n}(JSONRequest);\nexport { GetTransactionProof as default };","map":{"version":3,"names":["JSONRequest","GetTransactionProof","_JSONRequest","_inherits","_super","_createSuper","c","intDecoding","round","txID","_this","_classCallCheck","call","_createClass","key","value","path","concat","hashType","query","hashtype","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/algod/getTransactionProof.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetTransactionProof extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private round: number,\n    private txID: string\n  ) {\n    super(c, intDecoding);\n\n    this.round = round;\n    this.txID = txID;\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}/transactions/${this.txID}/proof`;\n  }\n\n  /**\n   * Exclude assets and application data from results\n   * The type of hash function used to create the proof, must be one of: \"sha512_256\", \"sha256\"\n   *\n   * #### Example\n   * ```typescript\n   * const hashType = \"sha256\";\n   * const round = 123456;\n   * const txId = \"abc123;\n   * const txProof = await algodClient.getTransactionProof(round, txId)\n   *        .hashType(hashType)\n   *        .do();\n   * ```\n   *\n   * @param hashType\n   * @category query\n   */\n  hashType(hashType: string) {\n    this.query.hashtype = hashType;\n    return this;\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAAC,IAIpBC,mBAAoB,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EACvC,SAAAA,oBACEK,CAAa,EACbC,WAAwB,EAChBC,KAAa,EACbC,IAAY;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAV,mBAAA;IAEpBS,KAAA,GAAAN,MAAA,CAAAQ,IAAA,OAAMN,CAAC,EAAEC,WAAW;IAHZG,KAAA,CAAAF,KAAK,GAALA,KAAK;IACLE,KAAA,CAAAD,IAAI,GAAJA,IAAI;IAIZC,KAAA,CAAKF,KAAK,GAAGA,KAAK;IAClBE,KAAA,CAAKD,IAAI,GAAGA,IAAI;IAAC,OAAAC,KAAA;EACnB;EAACG,YAAA,CAAAZ,mBAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAC,KAAA,EAAI;MACF,qBAAAC,MAAA,CAAqB,IAAI,CAACT,KAAK,oBAAAS,MAAA,CAAiB,IAAI,CAACR,IAAI;IAC3D;IAEA;;;;;;;;;;;;;;;;;EAAA;IAAAK,GAAA;IAAAC,KAAA,EAiBA,SAAAG,SAASA,SAAgB;MACvB,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAGF,SAAQ;MAC9B,OAAO,IAAI;IACb;EAAC;EAAA,OAAAjB,mBAAA;AAAA,EArC8CD,WAAW;AAAA,SAAvCC,mBAAoB,IAAAoB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}