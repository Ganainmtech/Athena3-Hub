{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class StatusAfterBlock extends JSONRequest {\n  constructor(c, intDecoding, round) {\n    super(c, intDecoding);\n    this.round = round;\n    if (!Number.isInteger(round)) throw Error('round should be an integer');\n    this.round = round;\n  }\n  path() {\n    return `/v2/status/wait-for-block-after/${this.round}`;\n  }\n}","map":{"version":3,"names":["JSONRequest","StatusAfterBlock","constructor","c","intDecoding","round","Number","isInteger","Error","path"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/algod/statusAfterBlock.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class StatusAfterBlock extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n    if (!Number.isInteger(round)) throw Error('round should be an integer');\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/status/wait-for-block-after/${this.round}`;\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,gBAAiB,SAAQD,WAAW;EACvDE,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,KAAAC,KAAK,GAALA,KAAK;IAEhE,IAAI,CAACC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC,EAAE,MAAMG,KAAK,CAAC,4BAA4B,CAAC;IACvE,IAAI,CAACH,KAAK,GAAGA,KAAK;EACpB;EAEAI,IAAIA,CAAA;IACF,OAAO,mCAAmC,IAAI,CAACJ,KAAK,EAAE;EACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}