{"ast":null,"code":"import { keccak_256 } from \"js-sha3\";\nimport { removeHexPrefix, addHexPrefix } from \"@walletconnect/encoding\";\nimport { convertUtf8ToHex, convertNumberToHex, convertUtf8ToBuffer } from \"./encoding\";\nimport { sanitizeHex, removeHexLeadingZeros } from \"./misc\";\nimport { isEmptyArray, isHexString, isEmptyString } from \"./validators\";\nexport function toChecksumAddress(address) {\n  address = removeHexPrefix(address.toLowerCase());\n  const hash = removeHexPrefix(keccak_256(convertUtf8ToBuffer(address)));\n  let checksum = \"\";\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) > 7) {\n      checksum += address[i].toUpperCase();\n    } else {\n      checksum += address[i];\n    }\n  }\n  return addHexPrefix(checksum);\n}\nexport const isValidAddress = address => {\n  if (!address) {\n    return false;\n  } else if (address.toLowerCase().substring(0, 2) !== \"0x\") {\n    return false;\n  } else if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false;\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n    return true;\n  } else {\n    return address === toChecksumAddress(address);\n  }\n};\nexport function parsePersonalSign(params) {\n  if (!isEmptyArray(params) && !isHexString(params[0])) {\n    params[0] = convertUtf8ToHex(params[0]);\n  }\n  return params;\n}\nexport function parseTransactionData(txData) {\n  if (typeof txData.type !== \"undefined\" && txData.type !== \"0\") return txData;\n  if (typeof txData.from === \"undefined\" || !isValidAddress(txData.from)) {\n    throw new Error(`Transaction object must include a valid 'from' value.`);\n  }\n  function parseHexValues(value) {\n    let result = value;\n    if (typeof value === \"number\" || typeof value === \"string\" && !isEmptyString(value)) {\n      if (!isHexString(value)) {\n        result = convertNumberToHex(value);\n      } else if (typeof value === \"string\") {\n        result = sanitizeHex(value);\n      }\n    }\n    if (typeof result === \"string\") {\n      result = removeHexLeadingZeros(result);\n    }\n    return result;\n  }\n  const txDataRPC = {\n    from: sanitizeHex(txData.from),\n    to: typeof txData.to === \"undefined\" ? undefined : sanitizeHex(txData.to),\n    gasPrice: typeof txData.gasPrice === \"undefined\" ? \"\" : parseHexValues(txData.gasPrice),\n    gas: typeof txData.gas === \"undefined\" ? typeof txData.gasLimit === \"undefined\" ? \"\" : parseHexValues(txData.gasLimit) : parseHexValues(txData.gas),\n    value: typeof txData.value === \"undefined\" ? \"\" : parseHexValues(txData.value),\n    nonce: typeof txData.nonce === \"undefined\" ? \"\" : parseHexValues(txData.nonce),\n    data: typeof txData.data === \"undefined\" ? \"\" : sanitizeHex(txData.data) || \"0x\"\n  };\n  const prunable = [\"gasPrice\", \"gas\", \"value\", \"nonce\"];\n  Object.keys(txDataRPC).forEach(key => {\n    if ((typeof txDataRPC[key] === \"undefined\" || typeof txDataRPC[key] === \"string\" && !txDataRPC[key].trim().length) && prunable.includes(key)) {\n      delete txDataRPC[key];\n    }\n  });\n  return txDataRPC;\n}","map":{"version":3,"names":["keccak_256","removeHexPrefix","addHexPrefix","convertUtf8ToHex","convertNumberToHex","convertUtf8ToBuffer","sanitizeHex","removeHexLeadingZeros","isEmptyArray","isHexString","isEmptyString","toChecksumAddress","address","toLowerCase","hash","checksum","i","length","parseInt","toUpperCase","isValidAddress","substring","test","parsePersonalSign","params","parseTransactionData","txData","type","from","Error","parseHexValues","value","result","txDataRPC","to","undefined","gasPrice","gas","gasLimit","nonce","data","prunable","Object","keys","forEach","key","trim","includes"],"sources":["../../src/ethereum.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}