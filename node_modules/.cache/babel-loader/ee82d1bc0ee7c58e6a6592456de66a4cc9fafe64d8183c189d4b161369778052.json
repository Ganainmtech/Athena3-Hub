{"ast":null,"code":"import * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nexport default function useBase(customizePrefixCls, direction) {\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    rootDirection = _React$useContext.direction,\n    renderEmpty = _React$useContext.renderEmpty;\n  var mergedDirection = direction || rootDirection;\n  var prefixCls = getPrefixCls('select', customizePrefixCls);\n  var cascaderPrefixCls = getPrefixCls('cascader', customizePrefixCls);\n  return [prefixCls, cascaderPrefixCls, mergedDirection, renderEmpty];\n}","map":{"version":3,"names":["React","ConfigContext","useBase","customizePrefixCls","direction","_React$useContext","useContext","getPrefixCls","rootDirection","renderEmpty","mergedDirection","prefixCls","cascaderPrefixCls"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/antd/es/cascader/hooks/useBase.js"],"sourcesContent":["import * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nexport default function useBase(customizePrefixCls, direction) {\n  const {\n    getPrefixCls,\n    direction: rootDirection,\n    renderEmpty\n  } = React.useContext(ConfigContext);\n  const mergedDirection = direction || rootDirection;\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const cascaderPrefixCls = getPrefixCls('cascader', customizePrefixCls);\n  return [prefixCls, cascaderPrefixCls, mergedDirection, renderEmpty];\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,uBAAuB;AACrD,eAAe,SAASC,OAAOA,CAACC,kBAAkB,EAAEC,SAAS,EAAE;EAC7D,IAAAC,iBAAA,GAIIL,KAAK,CAACM,UAAU,CAACL,aAAa,CAAC;IAHjCM,YAAY,GAAAF,iBAAA,CAAZE,YAAY;IACDC,aAAa,GAAAH,iBAAA,CAAxBD,SAAS;IACTK,WAAW,GAAAJ,iBAAA,CAAXI,WAAW;EAEb,IAAMC,eAAe,GAAGN,SAAS,IAAII,aAAa;EAClD,IAAMG,SAAS,GAAGJ,YAAY,CAAC,QAAQ,EAAEJ,kBAAkB,CAAC;EAC5D,IAAMS,iBAAiB,GAAGL,YAAY,CAAC,UAAU,EAAEJ,kBAAkB,CAAC;EACtE,OAAO,CAACQ,SAAS,EAAEC,iBAAiB,EAAEF,eAAe,EAAED,WAAW,CAAC;AACrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}