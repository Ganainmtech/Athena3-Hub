{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _objectSpread from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport { concatArrays } from '../../../utils/utils';\n/**\n * Sets the default header (if not previously set) for sending a raw\n * transaction.\n * @param headers - A headers object\n */\nexport function setSendTransactionHeaders() {\n  var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var hdrs = headers;\n  if (Object.keys(hdrs).every(function (key) {\n    return key.toLowerCase() !== 'content-type';\n  })) {\n    hdrs = _objectSpread({}, headers);\n    hdrs['Content-Type'] = 'application/x-binary';\n  }\n  return hdrs;\n}\nfunction isByteArray(array) {\n  return array && array.byteLength !== undefined;\n}\n/**\n * broadcasts the passed signed txns to the network\n */\nvar SendRawTransaction = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(SendRawTransaction, _JSONRequest);\n  var _super = _createSuper(SendRawTransaction);\n  function SendRawTransaction(c, stxOrStxs) {\n    var _this;\n    _classCallCheck(this, SendRawTransaction);\n    _this = _super.call(this, c);\n    var forPosting = stxOrStxs;\n    if (Array.isArray(stxOrStxs)) {\n      if (!stxOrStxs.every(isByteArray)) {\n        throw new TypeError('Array elements must be byte arrays');\n      }\n      // Flatten into a single Uint8Array\n      forPosting = concatArrays.apply(void 0, _toConsumableArray(stxOrStxs));\n    } else if (!isByteArray(forPosting)) {\n      throw new TypeError('Argument must be byte array');\n    }\n    _this.txnBytesToPost = forPosting;\n    return _this;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  _createClass(SendRawTransaction, [{\n    key: \"path\",\n    value: function path() {\n      return '/v2/transactions';\n    }\n  }, {\n    key: \"do\",\n    value: function () {\n      var _do2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var headers,\n          txHeaders,\n          res,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              headers = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              txHeaders = setSendTransactionHeaders(headers);\n              _context.next = 4;\n              return this.c.post(this.path(), Buffer.from(this.txnBytesToPost), txHeaders);\n            case 4:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.body);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _do() {\n        return _do2.apply(this, arguments);\n      }\n      return _do;\n    }()\n  }]);\n  return SendRawTransaction;\n}(JSONRequest);\nexport { SendRawTransaction as default };","map":{"version":3,"names":["Buffer","JSONRequest","concatArrays","setSendTransactionHeaders","headers","arguments","length","undefined","hdrs","Object","keys","every","key","toLowerCase","_objectSpread","isByteArray","array","byteLength","SendRawTransaction","_JSONRequest","_inherits","_super","_createSuper","c","stxOrStxs","_this","_classCallCheck","call","forPosting","Array","isArray","TypeError","apply","_toConsumableArray","txnBytesToPost","_createClass","value","path","_do2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","txHeaders","res","_args","wrap","_callee$","_context","prev","next","post","from","sent","abrupt","body","stop","_do","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/algod/sendRawTransaction.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport { concatArrays } from '../../../utils/utils';\n\n/**\n * Sets the default header (if not previously set) for sending a raw\n * transaction.\n * @param headers - A headers object\n */\nexport function setSendTransactionHeaders(headers = {}) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {\n    hdrs = { ...headers };\n    hdrs['Content-Type'] = 'application/x-binary';\n  }\n  return hdrs;\n}\n\nfunction isByteArray(array: any): array is Uint8Array {\n  return array && array.byteLength !== undefined;\n}\n\n/**\n * broadcasts the passed signed txns to the network\n */\nexport default class SendRawTransaction extends JSONRequest {\n  private txnBytesToPost: Uint8Array;\n\n  constructor(c: HTTPClient, stxOrStxs: Uint8Array | Uint8Array[]) {\n    super(c);\n\n    let forPosting = stxOrStxs;\n    if (Array.isArray(stxOrStxs)) {\n      if (!stxOrStxs.every(isByteArray)) {\n        throw new TypeError('Array elements must be byte arrays');\n      }\n      // Flatten into a single Uint8Array\n      forPosting = concatArrays(...stxOrStxs);\n    } else if (!isByteArray(forPosting)) {\n      throw new TypeError('Argument must be byte array');\n    }\n    this.txnBytesToPost = forPosting;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/transactions';\n  }\n\n  async do(headers = {}) {\n    const txHeaders = setSendTransactionHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.txnBytesToPost),\n      txHeaders\n    );\n    return res.body;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}