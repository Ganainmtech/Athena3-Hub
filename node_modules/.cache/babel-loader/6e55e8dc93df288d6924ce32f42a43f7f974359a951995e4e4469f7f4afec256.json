{"ast":null,"code":"import { prepareComponentToken, prepareToken } from '.';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor } from '../../theme/internal';\n// ============================== Ribbon ==============================\nconst genRibbonStyle = token => {\n  const {\n    antCls,\n    badgeFontHeight,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook(['Badge', 'Ribbon'], token => {\n  const badgeToken = prepareToken(token);\n  return [genRibbonStyle(badgeToken)];\n}, prepareComponentToken);","map":{"version":3,"names":["prepareComponentToken","prepareToken","resetComponent","genComponentStyleHook","genPresetColor","genRibbonStyle","token","antCls","badgeFontHeight","marginXS","badgeRibbonOffset","ribbonPrefixCls","ribbonWrapperPrefixCls","statusRibbonPreset","colorKey","_ref","darkColor","background","color","position","Object","assign","top","padding","paddingXS","colorPrimary","lineHeight","whiteSpace","backgroundColor","borderRadius","borderRadiusSM","colorTextLightSolid","width","height","border","transform","badgeRibbonCornerTransform","transformOrigin","filter","badgeRibbonCornerFilter","insetInlineEnd","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","insetInlineStart","borderEndStartRadius","borderInlineStartColor","direction","badgeToken"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/antd/es/badge/style/ribbon.js"],"sourcesContent":["import { prepareComponentToken, prepareToken } from '.';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor } from '../../theme/internal';\n// ============================== Ribbon ==============================\nconst genRibbonStyle = token => {\n  const {\n    antCls,\n    badgeFontHeight,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook(['Badge', 'Ribbon'], token => {\n  const badgeToken = prepareToken(token);\n  return [genRibbonStyle(badgeToken)];\n}, prepareComponentToken);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}