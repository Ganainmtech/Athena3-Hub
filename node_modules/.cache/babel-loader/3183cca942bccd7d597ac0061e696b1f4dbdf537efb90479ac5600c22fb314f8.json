{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveFormValues = toHaveFormValues;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _isEqualWith = _interopRequireDefault(require(\"lodash/isEqualWith\"));\nvar _uniq = _interopRequireDefault(require(\"lodash/uniq\"));\nvar _css = _interopRequireDefault(require(\"css.escape\"));\nvar _utils = require(\"./utils\");\n// Returns the combined value of several elements that have the same name\n// e.g. radio buttons or groups of checkboxes\nfunction getMultiElementValue(elements) {\n  const types = (0, _uniq.default)(elements.map(element => element.type));\n  if (types.length !== 1) {\n    throw new Error('Multiple form elements with the same name must be of the same type');\n  }\n  switch (types[0]) {\n    case 'radio':\n      {\n        const theChosenOne = elements.find(radio => radio.checked);\n        return theChosenOne ? theChosenOne.value : undefined;\n      }\n    case 'checkbox':\n      return elements.filter(checkbox => checkbox.checked).map(checkbox => checkbox.value);\n    default:\n      // NOTE: Not even sure this is a valid use case, but just in case...\n      return elements.map(element => element.value);\n  }\n}\nfunction getFormValue(container, name) {\n  const elements = [...container.querySelectorAll(`[name=\"${(0, _css.default)(name)}\"]`)];\n  /* istanbul ignore if */\n  if (elements.length === 0) {\n    return undefined; // shouldn't happen, but just in case\n  }\n\n  switch (elements.length) {\n    case 1:\n      return (0, _utils.getSingleElementValue)(elements[0]);\n    default:\n      return getMultiElementValue(elements);\n  }\n}\n\n// Strips the `[]` suffix off a form value name\nfunction getPureName(name) {\n  return /\\[\\]$/.test(name) ? name.slice(0, -2) : name;\n}\nfunction getAllFormValues(container) {\n  const names = Array.from(container.elements).map(element => element.name);\n  return names.reduce((obj, name) => (0, _extends2.default)({}, obj, {\n    [getPureName(name)]: getFormValue(container, name)\n  }), {});\n}\nfunction toHaveFormValues(formElement, expectedValues) {\n  (0, _utils.checkHtmlElement)(formElement, toHaveFormValues, this);\n  if (!formElement.elements) {\n    // TODO: Change condition to use instanceof against the appropriate element classes instead\n    throw new Error('toHaveFormValues must be called on a form or a fieldset');\n  }\n  const formValues = getAllFormValues(formElement);\n  return {\n    pass: Object.entries(expectedValues).every(([name, expectedValue]) => (0, _isEqualWith.default)(formValues[name], expectedValue, _utils.compareArraysAsSet)),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      const matcher = `${this.isNot ? '.not' : ''}.toHaveFormValues`;\n      const commonKeyValues = Object.keys(formValues).filter(key => expectedValues.hasOwnProperty(key)).reduce((obj, key) => (0, _extends2.default)({}, obj, {\n        [key]: formValues[key]\n      }), {});\n      return [this.utils.matcherHint(matcher, 'element', ''), `Expected the element ${to} have form values`, this.utils.diff(expectedValues, commonKeyValues)].join('\\n\\n');\n    }\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","toHaveFormValues","_extends2","_isEqualWith","_uniq","_css","_utils","getMultiElementValue","elements","types","default","map","element","type","length","Error","theChosenOne","find","radio","checked","undefined","filter","checkbox","getFormValue","container","name","querySelectorAll","getSingleElementValue","getPureName","test","slice","getAllFormValues","names","Array","from","reduce","obj","formElement","expectedValues","checkHtmlElement","formValues","pass","entries","every","expectedValue","compareArraysAsSet","message","to","isNot","matcher","commonKeyValues","keys","key","hasOwnProperty","utils","matcherHint","diff","join"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@testing-library/jest-dom/dist/to-have-form-values.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveFormValues = toHaveFormValues;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _isEqualWith = _interopRequireDefault(require(\"lodash/isEqualWith\"));\nvar _uniq = _interopRequireDefault(require(\"lodash/uniq\"));\nvar _css = _interopRequireDefault(require(\"css.escape\"));\nvar _utils = require(\"./utils\");\n// Returns the combined value of several elements that have the same name\n// e.g. radio buttons or groups of checkboxes\nfunction getMultiElementValue(elements) {\n  const types = (0, _uniq.default)(elements.map(element => element.type));\n  if (types.length !== 1) {\n    throw new Error('Multiple form elements with the same name must be of the same type');\n  }\n  switch (types[0]) {\n    case 'radio':\n      {\n        const theChosenOne = elements.find(radio => radio.checked);\n        return theChosenOne ? theChosenOne.value : undefined;\n      }\n    case 'checkbox':\n      return elements.filter(checkbox => checkbox.checked).map(checkbox => checkbox.value);\n    default:\n      // NOTE: Not even sure this is a valid use case, but just in case...\n      return elements.map(element => element.value);\n  }\n}\nfunction getFormValue(container, name) {\n  const elements = [...container.querySelectorAll(`[name=\"${(0, _css.default)(name)}\"]`)];\n  /* istanbul ignore if */\n  if (elements.length === 0) {\n    return undefined; // shouldn't happen, but just in case\n  }\n\n  switch (elements.length) {\n    case 1:\n      return (0, _utils.getSingleElementValue)(elements[0]);\n    default:\n      return getMultiElementValue(elements);\n  }\n}\n\n// Strips the `[]` suffix off a form value name\nfunction getPureName(name) {\n  return /\\[\\]$/.test(name) ? name.slice(0, -2) : name;\n}\nfunction getAllFormValues(container) {\n  const names = Array.from(container.elements).map(element => element.name);\n  return names.reduce((obj, name) => (0, _extends2.default)({}, obj, {\n    [getPureName(name)]: getFormValue(container, name)\n  }), {});\n}\nfunction toHaveFormValues(formElement, expectedValues) {\n  (0, _utils.checkHtmlElement)(formElement, toHaveFormValues, this);\n  if (!formElement.elements) {\n    // TODO: Change condition to use instanceof against the appropriate element classes instead\n    throw new Error('toHaveFormValues must be called on a form or a fieldset');\n  }\n  const formValues = getAllFormValues(formElement);\n  return {\n    pass: Object.entries(expectedValues).every(([name, expectedValue]) => (0, _isEqualWith.default)(formValues[name], expectedValue, _utils.compareArraysAsSet)),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      const matcher = `${this.isNot ? '.not' : ''}.toHaveFormValues`;\n      const commonKeyValues = Object.keys(formValues).filter(key => expectedValues.hasOwnProperty(key)).reduce((obj, key) => (0, _extends2.default)({}, obj, {\n        [key]: formValues[key]\n      }), {});\n      return [this.utils.matcherHint(matcher, 'element', ''), `Expected the element ${to} have form values`, this.utils.diff(expectedValues, commonKeyValues)].join('\\n\\n');\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}