{"ast":null,"code":"function translateBoxReference(reference, foreignApps, appIndex) {\n  const referenceId = reference.appIndex;\n  const referenceName = reference.name;\n  const isOwnReference = referenceId === 0 || referenceId === appIndex;\n  let index = 0;\n  if (foreignApps != null) {\n    // Foreign apps start from index 1; index 0 is its own app ID.\n    index = foreignApps.indexOf(referenceId) + 1;\n  }\n  // Check if the app referenced is itself after checking the foreign apps array.\n  // If index is zero, then the app ID was not found in the foreign apps array\n  // or the foreign apps array was null.\n  if (index === 0 && !isOwnReference) {\n    // Error if the app is trying to reference a foreign app that was not in\n    // its own foreign apps array.\n    throw new Error(`Box ref with appId ${referenceId} not in foreign-apps`);\n  }\n  return {\n    i: index,\n    n: referenceName\n  };\n}\n/**\n * translateBoxReferences translates an array of BoxReferences with app IDs\n * into an array of EncodedBoxReferences with foreign indices.\n */\nexport function translateBoxReferences(references, foreignApps, appIndex) {\n  if (references == null) return [];\n  return references.map(bx => translateBoxReference(bx, foreignApps, appIndex));\n}","map":{"version":3,"names":["translateBoxReference","reference","foreignApps","appIndex","referenceId","referenceName","name","isOwnReference","index","indexOf","Error","i","n","translateBoxReferences","references","map","bx"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/node_modules/algosdk/src/boxStorage.ts"],"sourcesContent":["import { EncodedBoxReference } from './types';\nimport { BoxReference } from './types/transactions/base';\n\nfunction translateBoxReference(\n  reference: BoxReference,\n  foreignApps: number[],\n  appIndex: number\n): EncodedBoxReference {\n  const referenceId = reference.appIndex;\n  const referenceName = reference.name;\n  const isOwnReference = referenceId === 0 || referenceId === appIndex;\n  let index = 0;\n\n  if (foreignApps != null) {\n    // Foreign apps start from index 1; index 0 is its own app ID.\n    index = foreignApps.indexOf(referenceId) + 1;\n  }\n  // Check if the app referenced is itself after checking the foreign apps array.\n  // If index is zero, then the app ID was not found in the foreign apps array\n  // or the foreign apps array was null.\n  if (index === 0 && !isOwnReference) {\n    // Error if the app is trying to reference a foreign app that was not in\n    // its own foreign apps array.\n    throw new Error(`Box ref with appId ${referenceId} not in foreign-apps`);\n  }\n  return { i: index, n: referenceName };\n}\n\n/**\n * translateBoxReferences translates an array of BoxReferences with app IDs\n * into an array of EncodedBoxReferences with foreign indices.\n */\nexport function translateBoxReferences(\n  references: BoxReference[] | undefined,\n  foreignApps: number[],\n  appIndex: number\n): EncodedBoxReference[] {\n  if (references == null) return [];\n  return references.map((bx) =>\n    translateBoxReference(bx, foreignApps, appIndex)\n  );\n}\n"],"mappings":"AAGA,SAASA,qBAAqBA,CAC5BC,SAAuB,EACvBC,WAAqB,EACrBC,QAAgB;EAEhB,MAAMC,WAAW,GAAGH,SAAS,CAACE,QAAQ;EACtC,MAAME,aAAa,GAAGJ,SAAS,CAACK,IAAI;EACpC,MAAMC,cAAc,GAAGH,WAAW,KAAK,CAAC,IAAIA,WAAW,KAAKD,QAAQ;EACpE,IAAIK,KAAK,GAAG,CAAC;EAEb,IAAIN,WAAW,IAAI,IAAI,EAAE;IACvB;IACAM,KAAK,GAAGN,WAAW,CAACO,OAAO,CAACL,WAAW,CAAC,GAAG,CAAC;;EAE9C;EACA;EACA;EACA,IAAII,KAAK,KAAK,CAAC,IAAI,CAACD,cAAc,EAAE;IAClC;IACA;IACA,MAAM,IAAIG,KAAK,CAAC,sBAAsBN,WAAW,sBAAsB,CAAC;;EAE1E,OAAO;IAAEO,CAAC,EAAEH,KAAK;IAAEI,CAAC,EAAEP;EAAa,CAAE;AACvC;AAEA;;;;AAIA,OAAM,SAAUQ,sBAAsBA,CACpCC,UAAsC,EACtCZ,WAAqB,EACrBC,QAAgB;EAEhB,IAAIW,UAAU,IAAI,IAAI,EAAE,OAAO,EAAE;EACjC,OAAOA,UAAU,CAACC,GAAG,CAAEC,EAAE,IACvBhB,qBAAqB,CAACgB,EAAE,EAAEd,WAAW,EAAEC,QAAQ,CAAC,CACjD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}