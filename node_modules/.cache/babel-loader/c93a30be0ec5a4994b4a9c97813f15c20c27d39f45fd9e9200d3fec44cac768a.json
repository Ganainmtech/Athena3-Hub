{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nimport { TransactionGroupLedgerStateDeltasForRoundResponse } from './models/types';\nexport default class GetTransactionGroupLedgerStateDeltasForRound extends JSONRequest {\n  constructor(c, intDecoding, round) {\n    super(c, intDecoding);\n    this.round = round;\n    this.round = round;\n    this.query = {\n      format: 'json'\n    };\n  }\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/v2/deltas/${this.round}/txn/group`;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body) {\n    return TransactionGroupLedgerStateDeltasForRoundResponse.from_obj_for_encoding(body);\n  }\n}","map":{"version":3,"names":["JSONRequest","TransactionGroupLedgerStateDeltasForRoundResponse","GetTransactionGroupLedgerStateDeltasForRound","constructor","c","intDecoding","round","query","format","path","prepare","body","from_obj_for_encoding"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/algod/getTransactionGroupLedgerStateDeltasForRound.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\nimport { TransactionGroupLedgerStateDeltasForRoundResponse } from './models/types';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetTransactionGroupLedgerStateDeltasForRound extends JSONRequest<\n  TransactionGroupLedgerStateDeltasForRoundResponse,\n  Record<string, any>\n> {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: bigint) {\n    super(c, intDecoding);\n    this.round = round;\n    this.query = { format: 'json' };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/v2/deltas/${this.round}/txn/group`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(\n    body: Record<string, any>\n  ): TransactionGroupLedgerStateDeltasForRoundResponse {\n    return TransactionGroupLedgerStateDeltasForRoundResponse.from_obj_for_encoding(\n      body\n    );\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAASC,iDAAiD,QAAQ,gBAAgB;AAIlF,eAAc,MAAOC,4CAA6C,SAAQF,WAGzE;EACCG,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,KAAAC,KAAK,GAALA,KAAK;IAEhE,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAG;MAAEC,MAAM,EAAE;IAAM,CAAE;EACjC;EAEA;EACAC,IAAIA,CAAA;IACF,OAAO,cAAc,IAAI,CAACH,KAAK,YAAY;EAC7C;EAEA;EACAI,OAAOA,CACLC,IAAyB;IAEzB,OAAOV,iDAAiD,CAACW,qBAAqB,CAC5ED,IAAI,CACL;EACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}