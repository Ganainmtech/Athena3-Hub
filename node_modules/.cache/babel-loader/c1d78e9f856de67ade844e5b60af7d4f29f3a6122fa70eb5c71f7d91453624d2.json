{"ast":null,"code":"\"use client\";\n\n/* eslint-disable import/prefer-default-export */\nimport _slicedToArray from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  var _useInternalToken = useInternalToken(),\n    _useInternalToken2 = _slicedToArray(_useInternalToken, 3),\n    theme = _useInternalToken2[0],\n    token = _useInternalToken2[1],\n    hashId = _useInternalToken2[2];\n  return {\n    theme: theme,\n    token: token,\n    hashId: hashId\n  };\n}\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig: defaultConfig,\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken: useToken,\n  defaultAlgorithm: defaultAlgorithm,\n  darkAlgorithm: darkAlgorithm,\n  compactAlgorithm: compactAlgorithm,\n  getDesignToken: getDesignToken\n};","map":{"version":3,"names":["_slicedToArray","getDesignToken","defaultConfig","useToken","useInternalToken","compactAlgorithm","darkAlgorithm","defaultAlgorithm","_useInternalToken","_useInternalToken2","theme","token","hashId","defaultSeed"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/antd/es/theme/index.js"],"sourcesContent":["\"use client\";\n\n/* eslint-disable import/prefer-default-export */\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  const [theme, token, hashId] = useInternalToken();\n  return {\n    theme,\n    token,\n    hashId\n  };\n}\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig,\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken,\n  defaultAlgorithm,\n  darkAlgorithm,\n  compactAlgorithm,\n  getDesignToken\n};"],"mappings":"AAAA,YAAY;;AAEZ;AAAA,OAAAA,cAAA;AACA,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,aAAa,EAAEC,QAAQ,IAAIC,gBAAgB,QAAQ,YAAY;AACxE,OAAOC,gBAAgB,MAAM,kBAAkB;AAC/C,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,gBAAgB,MAAM,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,SAASJ,QAAQA,CAAA,EAAG;EAClB,IAAAK,iBAAA,GAA+BJ,gBAAgB,CAAC,CAAC;IAAAK,kBAAA,GAAAT,cAAA,CAAAQ,iBAAA;IAA1CE,KAAK,GAAAD,kBAAA;IAAEE,KAAK,GAAAF,kBAAA;IAAEG,MAAM,GAAAH,kBAAA;EAC3B,OAAO;IACLC,KAAK,EAALA,KAAK;IACLC,KAAK,EAALA,KAAK;IACLC,MAAM,EAANA;EACF,CAAC;AACH;AACA,eAAe;EACb;EACAV,aAAa,EAAbA,aAAa;EACb;EACAW,WAAW,EAAEX,aAAa,CAACS,KAAK;EAChCR,QAAQ,EAARA,QAAQ;EACRI,gBAAgB,EAAhBA,gBAAgB;EAChBD,aAAa,EAAbA,aAAa;EACbD,gBAAgB,EAAhBA,gBAAgB;EAChBJ,cAAc,EAAdA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}