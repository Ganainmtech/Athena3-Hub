{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class LookupBlock extends JSONRequest {\n  /**\n   * Returns the block for the passed round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const blockInfo = await indexerClient.lookupBlock(targetBlock).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2blocksround-number)\n   * @param round - The number of the round to look up.\n   * @category GET\n   */\n  constructor(c, intDecoding, round) {\n    super(c, intDecoding);\n    this.round = round;\n    this.round = round;\n  }\n  /**\n   * @returns `/v2/blocks/${round}`\n   */\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n  /**\n   * Header only flag. When this is set to true, returned block does not contain the\n   * transactions.\n   */\n  headerOnly(headerOnly) {\n    this.query['header-only'] = headerOnly;\n    return this;\n  }\n}","map":{"version":3,"names":["JSONRequest","LookupBlock","constructor","c","intDecoding","round","path","headerOnly","query"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/indexer/lookupBlock.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupBlock extends JSONRequest {\n  /**\n   * Returns the block for the passed round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const blockInfo = await indexerClient.lookupBlock(targetBlock).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2blocksround-number)\n   * @param round - The number of the round to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n    this.round = round;\n  }\n\n  /**\n   * @returns `/v2/blocks/${round}`\n   */\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n\n  /**\n   * Header only flag. When this is set to true, returned block does not contain the\n   * transactions.\n   */\n  headerOnly(headerOnly: boolean) {\n    this.query['header-only'] = headerOnly;\n    return this;\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,WAAY,SAAQD,WAAW;EAClD;;;;;;;;;;;;;EAaAE,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,KAAAC,KAAK,GAALA,KAAK;IAEhE,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA;;;EAGAC,IAAIA,CAAA;IACF,OAAO,cAAc,IAAI,CAACD,KAAK,EAAE;EACnC;EAEA;;;;EAIAE,UAAUA,CAACA,UAAmB;IAC5B,IAAI,CAACC,KAAK,CAAC,aAAa,CAAC,GAAGD,UAAU;IACtC,OAAO,IAAI;EACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}