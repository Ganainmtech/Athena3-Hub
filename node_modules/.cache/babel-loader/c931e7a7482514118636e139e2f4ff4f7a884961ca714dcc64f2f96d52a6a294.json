{"ast":null,"code":"import _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport JSONRequest from '../jsonrequest';\nimport { BoxesResponse } from './models/types';\n/**\n * Given an application ID, return all the box names associated with the app.\n *\n * #### Example\n * ```typescript\n * const index = 60553466;\n * const boxesResponse = await algodClient.getApplicationBoxes(index).max(3).do();\n * const boxNames = boxesResponse.boxes.map(box => box.name);\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-idboxes)\n * @param index - The application ID to look up.\n * @category GET\n */\nvar GetApplicationBoxes = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(GetApplicationBoxes, _JSONRequest);\n  var _super = _createSuper(GetApplicationBoxes);\n  function GetApplicationBoxes(c, intDecoding, index) {\n    var _this;\n    _classCallCheck(this, GetApplicationBoxes);\n    _this = _super.call(this, c, intDecoding);\n    _this.index = index;\n    _this.index = index;\n    _this.query.max = 0;\n    return _this;\n  }\n  /**\n   * @returns `/v2/applications/${index}/boxes`\n   */\n  _createClass(GetApplicationBoxes, [{\n    key: \"path\",\n    value: function path() {\n      return \"/v2/applications/\".concat(this.index, \"/boxes\");\n    }\n    /**\n     * Limit results for pagination.\n     *\n     * #### Example\n     * ```typescript\n     * const maxResults = 20;\n     * const boxesResult = await algodClient\n     *        .GetApplicationBoxes(1234)\n     *        .limit(maxResults)\n     *        .do();\n     * ```\n     *\n     * @param limit - maximum number of results to return.\n     * @category query\n     */\n  }, {\n    key: \"max\",\n    value: function max(_max) {\n      this.query.max = _max;\n      return this;\n    }\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"prepare\",\n    value: function prepare(body) {\n      return BoxesResponse.from_obj_for_encoding(body);\n    }\n  }]);\n  return GetApplicationBoxes;\n}(JSONRequest);\nexport { GetApplicationBoxes as default };","map":{"version":3,"names":["JSONRequest","BoxesResponse","GetApplicationBoxes","_JSONRequest","_inherits","_super","_createSuper","c","intDecoding","index","_this","_classCallCheck","call","query","max","_createClass","key","value","path","concat","prepare","body","from_obj_for_encoding","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/algod/getApplicationBoxes.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { BoxesResponse } from './models/types';\n\n/**\n * Given an application ID, return all the box names associated with the app.\n *\n * #### Example\n * ```typescript\n * const index = 60553466;\n * const boxesResponse = await algodClient.getApplicationBoxes(index).max(3).do();\n * const boxNames = boxesResponse.boxes.map(box => box.name);\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-idboxes)\n * @param index - The application ID to look up.\n * @category GET\n */\nexport default class GetApplicationBoxes extends JSONRequest<\n  BoxesResponse,\n  Record<string, any>\n> {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n    this.query.max = 0;\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/boxes`\n   */\n  path() {\n    return `/v2/applications/${this.index}/boxes`;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const boxesResult = await algodClient\n   *        .GetApplicationBoxes(1234)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): BoxesResponse {\n    return BoxesResponse.from_obj_for_encoding(body);\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAGxC,SAASC,aAAa,QAAQ,gBAAgB;AAE9C;;;;;;;;;;;;;;AAAA,IAcqBC,mBAAoB,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EAIvC,SAAAA,oBAAYK,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,mBAAA;IACxEQ,KAAA,GAAAL,MAAA,CAAAO,IAAA,OAAML,CAAC,EAAEC,WAAW;IADuCE,KAAA,CAAAD,KAAK,GAALA,KAAK;IAEhEC,KAAA,CAAKD,KAAK,GAAGA,KAAK;IAClBC,KAAA,CAAKG,KAAK,CAACC,GAAG,GAAG,CAAC;IAAC,OAAAJ,KAAA;EACrB;EAEA;;;EAAAK,YAAA,CAAAb,mBAAA;IAAAc,GAAA;IAAAC,KAAA,EAGA,SAAAC,KAAA,EAAI;MACF,2BAAAC,MAAA,CAA2B,IAAI,CAACV,KAAK;IACvC;IAEA;;;;;;;;;;;;;;;EAAA;IAAAO,GAAA;IAAAC,KAAA,EAeA,SAAAH,IAAIA,IAAW;MACb,IAAI,CAACD,KAAK,CAACC,GAAG,GAAGA,IAAG;MACpB,OAAO,IAAI;IACb;IAEA;EAAA;IAAAE,GAAA;IAAAC,KAAA,EACA,SAAAG,QAAQC,IAAyB;MAC/B,OAAOpB,aAAa,CAACqB,qBAAqB,CAACD,IAAI,CAAC;IAClD;EAAC;EAAA,OAAAnB,mBAAA;AAAA,EAxC8CF,WAGhD;AAAA,SAHoBE,mBAAoB,IAAAqB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}