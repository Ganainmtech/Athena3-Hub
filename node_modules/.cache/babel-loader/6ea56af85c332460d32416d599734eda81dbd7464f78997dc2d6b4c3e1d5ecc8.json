{"ast":null,"code":"import _slicedToArray from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as vlq from 'vlq';\nexport var SourceMap = /*#__PURE__*/function () {\n  function SourceMap(_ref) {\n    var version = _ref.version,\n      sources = _ref.sources,\n      names = _ref.names,\n      mappings = _ref.mappings;\n    _classCallCheck(this, SourceMap);\n    this.version = version;\n    this.sources = sources;\n    this.names = names;\n    this.mappings = mappings;\n    if (this.version !== 3) throw new Error(\"Only version 3 is supported, got \".concat(this.version));\n    if (this.mappings === undefined) throw new Error('mapping undefined, cannot build source map without `mapping`');\n    var pcList = this.mappings.split(';').map(function (m) {\n      var decoded = vlq.decode(m);\n      if (decoded.length > 2) return decoded[2];\n      return undefined;\n    });\n    this.pcToLine = {};\n    this.lineToPc = {};\n    var lastLine = 0;\n    var _iterator = _createForOfIteratorHelper(pcList.entries()),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          pc = _step$value[0],\n          lineDelta = _step$value[1];\n        // If the delta is not undefined, the lastLine should be updated with\n        // lastLine + the delta\n        if (lineDelta !== undefined) {\n          lastLine += lineDelta;\n        }\n        if (!(lastLine in this.lineToPc)) this.lineToPc[lastLine] = [];\n        this.lineToPc[lastLine].push(pc);\n        this.pcToLine[pc] = lastLine;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  _createClass(SourceMap, [{\n    key: \"getLineForPc\",\n    value: function getLineForPc(pc) {\n      return this.pcToLine[pc];\n    }\n  }, {\n    key: \"getPcsForLine\",\n    value: function getPcsForLine(line) {\n      return this.lineToPc[line];\n    }\n  }]);\n  return SourceMap;\n}();","map":{"version":3,"names":["vlq","SourceMap","_ref","version","sources","names","mappings","_classCallCheck","Error","concat","undefined","pcList","split","map","m","decoded","decode","length","pcToLine","lineToPc","lastLine","_iterator","_createForOfIteratorHelper","entries","_step","s","n","done","_step$value","_slicedToArray","value","pc","lineDelta","push","err","e","f","_createClass","key","getLineForPc","getPcsForLine","line"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/logic/sourcemap.ts"],"sourcesContent":["import * as vlq from 'vlq';\n\nexport class SourceMap {\n  version: number;\n  sources: string[];\n  names: string[];\n  mappings: string;\n\n  pcToLine: { [key: number]: number };\n  lineToPc: { [key: number]: number[] };\n\n  constructor({\n    version,\n    sources,\n    names,\n    mappings,\n  }: {\n    version: number;\n    sources: string[];\n    names: string[];\n    mappings: string;\n  }) {\n    this.version = version;\n    this.sources = sources;\n    this.names = names;\n    this.mappings = mappings;\n\n    if (this.version !== 3)\n      throw new Error(`Only version 3 is supported, got ${this.version}`);\n\n    if (this.mappings === undefined)\n      throw new Error(\n        'mapping undefined, cannot build source map without `mapping`'\n      );\n\n    const pcList = this.mappings.split(';').map((m) => {\n      const decoded = vlq.decode(m);\n      if (decoded.length > 2) return decoded[2];\n      return undefined;\n    });\n\n    this.pcToLine = {};\n    this.lineToPc = {};\n\n    let lastLine = 0;\n    for (const [pc, lineDelta] of pcList.entries()) {\n      // If the delta is not undefined, the lastLine should be updated with\n      // lastLine + the delta\n      if (lineDelta !== undefined) {\n        lastLine += lineDelta;\n      }\n\n      if (!(lastLine in this.lineToPc)) this.lineToPc[lastLine] = [];\n\n      this.lineToPc[lastLine].push(pc);\n      this.pcToLine[pc] = lastLine;\n    }\n  }\n\n  getLineForPc(pc: number): number | undefined {\n    return this.pcToLine[pc];\n  }\n\n  getPcsForLine(line: number): number[] | undefined {\n    return this.lineToPc[line];\n  }\n}\n"],"mappings":";;;;AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,WAAaC,SAAS;EASpB,SAAAA,UAAAC,IAAA,EAUC;IAAA,IATCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;MACPC,OAAO,GAAAF,IAAA,CAAPE,OAAO;MACPC,KAAK,GAAAH,IAAA,CAALG,KAAK;MACLC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAAC,eAAA,OAAAN,SAAA;IAOR,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IAExB,IAAI,IAAI,CAACH,OAAO,KAAK,CAAC,EACpB,MAAM,IAAIK,KAAK,qCAAAC,MAAA,CAAqC,IAAI,CAACN,OAAO,CAAE,CAAC;IAErE,IAAI,IAAI,CAACG,QAAQ,KAAKI,SAAS,EAC7B,MAAM,IAAIF,KAAK,CACb,8DAA8D,CAC/D;IAEH,IAAMG,MAAM,GAAG,IAAI,CAACL,QAAQ,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAACC,CAAC,EAAI;MAChD,IAAMC,OAAO,GAAGf,GAAG,CAACgB,MAAM,CAACF,CAAC,CAAC;MAC7B,IAAIC,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE,OAAOF,OAAO,CAAC,CAAC,CAAC;MACzC,OAAOL,SAAS;IAClB,CAAC,CAAC;IAEF,IAAI,CAACQ,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAElB,IAAIC,QAAQ,GAAG,CAAC;IAAC,IAAAC,SAAA,GAAAC,0BAAA,CACaX,MAAM,CAACY,OAAO,EAAE;MAAAC,KAAA;IAAA;MAA9C,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAAgD;QAAA,IAAAC,WAAA,GAAAC,cAAA,CAAAL,KAAA,CAAAM,KAAA;UAApCC,EAAE,GAAAH,WAAA;UAAEI,SAAS,GAAAJ,WAAA;QACvB;QACA;QACA,IAAII,SAAS,KAAKtB,SAAS,EAAE;UAC3BU,QAAQ,IAAIY,SAAS;;QAGvB,IAAI,EAAEZ,QAAQ,IAAI,IAAI,CAACD,QAAQ,CAAC,EAAE,IAAI,CAACA,QAAQ,CAACC,QAAQ,CAAC,GAAG,EAAE;QAE9D,IAAI,CAACD,QAAQ,CAACC,QAAQ,CAAC,CAACa,IAAI,CAACF,EAAE,CAAC;QAChC,IAAI,CAACb,QAAQ,CAACa,EAAE,CAAC,GAAGX,QAAQ;;IAC7B,SAAAc,GAAA;MAAAb,SAAA,CAAAc,CAAA,CAAAD,GAAA;IAAA;MAAAb,SAAA,CAAAe,CAAA;IAAA;EACH;EAACC,YAAA,CAAApC,SAAA;IAAAqC,GAAA;IAAAR,KAAA,EAED,SAAAS,aAAaR,EAAU;MACrB,OAAO,IAAI,CAACb,QAAQ,CAACa,EAAE,CAAC;IAC1B;EAAC;IAAAO,GAAA;IAAAR,KAAA,EAED,SAAAU,cAAcC,IAAY;MACxB,OAAO,IAAI,CAACtB,QAAQ,CAACsB,IAAI,CAAC;IAC5B;EAAC;EAAA,OAAAxC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}