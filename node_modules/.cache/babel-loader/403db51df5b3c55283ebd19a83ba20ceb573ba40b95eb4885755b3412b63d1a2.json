{"ast":null,"code":"(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function TempCtor() {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {}\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n    this.strip();\n    if (endian !== 'le') return;\n    this._initArray(this.toArray(), base, endian);\n  };\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n        // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n        // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n    this.strip();\n  };\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n        // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n        // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n    assert(false, 'Base should be between 2 and 36');\n  };\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return this.negative !== 0 ? -ret : ret;\n  };\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n    return res;\n  };\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n    return this.strip();\n  };\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n    this.length = b.length;\n    return this.strip();\n  };\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n    this.length = a.length;\n    return this.strip();\n  };\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n    this._expand(off + 1);\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd(num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n      // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n      // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add(num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n      // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n    this.length = Math.max(this.length, i);\n    if (a !== this) {\n      this.negative = 1;\n    }\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n    return out.strip();\n  }\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n    return 1 << i + 1 + odd;\n  };\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n    return ws;\n  };\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n    return ph;\n  };\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n    var _ = this.stub(N);\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n    if (r !== 0) {\n      var carry = 0;\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n      this.length += s;\n    }\n    return this.strip();\n  };\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n    return this.strip();\n  };\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n    if (this.length <= s) {\n      return this;\n    }\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n    this.words[0] -= num;\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n    return this.strip();\n  };\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n    this._expand(len);\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n    return this.strip();\n  };\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n    return this.strip();\n  };\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n    var yp = y.clone();\n    var xp = x.clone();\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n          x1.iushrn(1);\n        }\n      }\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n          x2.iushrn(1);\n        }\n      }\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n    return res;\n  };\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n      a.isub(b);\n    } while (true);\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n    return r;\n  };\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n    return this.m.sub(a)._forceRed(this);\n  };\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n    return r;\n  };\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n    return res;\n  };\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","map":{"version":3,"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","require","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","strip","toArray","Math","ceil","i","j","w","off","parseHex","str","end","r","len","c","charCodeAt","parseBase","mul","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","b","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","x","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","ireduce","rlen","split","imulK","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/bn.js/lib/bn.js"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}