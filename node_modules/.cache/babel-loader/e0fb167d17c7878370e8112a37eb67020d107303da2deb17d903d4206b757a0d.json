{"ast":null,"code":"import _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as encoding from '../../../encoding/encoding';\nimport JSONRequest from '../jsonrequest';\n/**\n * block gets the block info for the given round. this call may block\n */\nvar Block = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(Block, _JSONRequest);\n  var _super = _createSuper(Block);\n  function Block(c, roundNumber) {\n    var _this;\n    _classCallCheck(this, Block);\n    _this = _super.call(this, c);\n    if (!Number.isInteger(roundNumber)) throw Error('roundNumber should be an integer');\n    _this.round = roundNumber;\n    _this.query = {\n      format: 'msgpack'\n    };\n    return _this;\n  }\n  _createClass(Block, [{\n    key: \"path\",\n    value: function path() {\n      return \"/v2/blocks/\".concat(this.round);\n    }\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"prepare\",\n    value: function prepare(body) {\n      if (body && body.byteLength > 0) {\n        return encoding.decode(body);\n      }\n      return undefined;\n    }\n  }]);\n  return Block;\n}(JSONRequest);\nexport { Block as default };","map":{"version":3,"names":["encoding","JSONRequest","Block","_JSONRequest","_inherits","_super","_createSuper","c","roundNumber","_this","_classCallCheck","call","Number","isInteger","Error","round","query","format","_createClass","key","value","path","concat","prepare","body","byteLength","decode","undefined","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/algod/block.ts"],"sourcesContent":["import * as encoding from '../../../encoding/encoding';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\n\n/**\n * block gets the block info for the given round. this call may block\n */\nexport default class Block extends JSONRequest {\n  private round: number;\n\n  constructor(c: HTTPClient, roundNumber: number) {\n    super(c);\n    if (!Number.isInteger(roundNumber))\n      throw Error('roundNumber should be an integer');\n    this.round = roundNumber;\n    this.query = { format: 'msgpack' };\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Uint8Array) {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n}\n"],"mappings":";;;;AAAA,OAAO,KAAKA,QAAQ,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,gBAAgB;AAGxC;;;AAAA,IAGqBC,KAAM,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,KAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,KAAA;EAGzB,SAAAA,MAAYK,CAAa,EAAEC,WAAmB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,KAAA;IAC5CO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMJ,CAAC;IACP,IAAI,CAACK,MAAM,CAACC,SAAS,CAACL,WAAW,CAAC,EAChC,MAAMM,KAAK,CAAC,kCAAkC,CAAC;IACjDL,KAAA,CAAKM,KAAK,GAAGP,WAAW;IACxBC,KAAA,CAAKO,KAAK,GAAG;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAC,OAAAR,KAAA;EACrC;EAACS,YAAA,CAAAhB,KAAA;IAAAiB,GAAA;IAAAC,KAAA,EAED,SAAAC,KAAA,EAAI;MACF,qBAAAC,MAAA,CAAqB,IAAI,CAACP,KAAK;IACjC;IAEA;EAAA;IAAAI,GAAA;IAAAC,KAAA,EACA,SAAAG,QAAQC,IAAgB;MACtB,IAAIA,IAAI,IAAIA,IAAI,CAACC,UAAU,GAAG,CAAC,EAAE;QAC/B,OAAOzB,QAAQ,CAAC0B,MAAM,CAACF,IAAI,CAAwB;;MAErD,OAAOG,SAAS;IAClB;EAAC;EAAA,OAAAzB,KAAA;AAAA,EArBgCD,WAAW;AAAA,SAAzBC,KAAM,IAAA0B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}