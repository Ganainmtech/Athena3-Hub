{"ast":null,"code":"import _classCallCheck from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport JSONRequest from '../jsonrequest';\n/**\n * Returns information about indexed assets.\n *\n * #### Example\n * ```typescript\n * const assets = await indexerClient.searchForAssets().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assets)\n * @category GET\n */\nvar SearchForAssets = /*#__PURE__*/function (_JSONRequest) {\n  _inherits(SearchForAssets, _JSONRequest);\n  var _super = _createSuper(SearchForAssets);\n  function SearchForAssets() {\n    _classCallCheck(this, SearchForAssets);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SearchForAssets, [{\n    key: \"path\",\n    value:\n    /**\n     * @returns `/v2/assets`\n     */\n    // eslint-disable-next-line class-methods-use-this\n    function path() {\n      return '/v2/assets';\n    }\n    /**\n     * Limit results for pagination.\n     *\n     * #### Example\n     * ```typescript\n     * const maxResults = 20;\n     * const assets = await indexerClient\n     *        .searchForAssets()\n     *        .limit(maxResults)\n     *        .do();\n     * ```\n     *\n     * @param limit - maximum number of results to return.\n     * @category query\n     */\n  }, {\n    key: \"limit\",\n    value: function limit(_limit) {\n      this.query.limit = _limit;\n      return this;\n    }\n    /**\n     * Filter just assets with the given creator address.\n     *\n     * #### Example\n     * ```typescript\n     * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n     * const assets = await indexerClient\n     *        .searchForAssets()\n     *        .creator(address)\n     *        .do();\n     * ```\n     *\n     * @param creator\n     * @category query\n     */\n  }, {\n    key: \"creator\",\n    value: function creator(_creator) {\n      this.query.creator = _creator;\n      return this;\n    }\n    /**\n     * Filter just assets with the given name.\n     *\n     * #### Example\n     * ```typescript\n     * const name = \"Test Token\";\n     * const assets = await indexerClient\n     *        .searchForAssets()\n     *        .name(name)\n     *        .do();\n     * ```\n     *\n     * @param name\n     * @category query\n     */\n  }, {\n    key: \"name\",\n    value: function name(_name) {\n      this.query.name = _name;\n      return this;\n    }\n    /**\n     * Filter just assets with the given unit.\n     *\n     * #### Example\n     * ```typescript\n     * const unit = \"test\";\n     * const assets = await indexerClient\n     *        .searchForAssets()\n     *        .unit(unit)\n     *        .do();\n     * ```\n     *\n     * @param unit\n     * @category query\n     */\n  }, {\n    key: \"unit\",\n    value: function unit(_unit) {\n      this.query.unit = _unit;\n      return this;\n    }\n    /**\n     * Asset ID for filter, as int.\n     *\n     * #### Example\n     * ```typescript\n     * const assetId = 163650;\n     * const assets = await indexerClient\n     *        .searchForAssets()\n     *        .index(assetId)\n     *        .do();\n     * ```\n     * @remarks Alternatively, use `indexerClient.lookupAssetByID(assetId).do();`\n     * @param index\n     * @category query\n     */\n  }, {\n    key: \"index\",\n    value: function index(_index) {\n      this.query['asset-id'] = _index;\n      return this;\n    }\n    /**\n     * Specify the next page of results.\n     *\n     * #### Example\n     * ```typescript\n     * const maxResults = 20;\n     *\n     * const assetsPage1 = await indexerClient\n     *        .searchForAssets()\n     *        .limit(maxResults)\n     *        .do();\n     *\n     * const assetsPage2 = await indexerClient\n     *        .searchForAssets()\n     *        .limit(maxResults)\n     *        .nextToken(assetsPage1[\"next-token\"])\n     *        .do();\n     * ```\n     * @param nextToken - provided by the previous results.\n     * @category query\n     */\n  }, {\n    key: \"nextToken\",\n    value: function nextToken(_nextToken) {\n      this.query.next = _nextToken;\n      return this;\n    }\n    /**\n     * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n     *\n     * #### Example 1\n     * ```typescript\n     * const assets = await indexerClient\n     *        .searchForAssets()\n     *        .includeAll(false)\n     *        .do();\n     * ```\n     *\n     * #### Example 2\n     * ```typescript\n     * const assets = await indexerClient\n     *        .searchForAssets()\n     *        .includeAll()\n     *        .do();\n     * ```\n     *\n     * @param value - default true when called without passing a value\n     * @category query\n     */\n  }, {\n    key: \"includeAll\",\n    value: function includeAll() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.query['include-all'] = value;\n      return this;\n    }\n  }]);\n  return SearchForAssets;\n}(JSONRequest);\nexport { SearchForAssets as default };","map":{"version":3,"names":["JSONRequest","SearchForAssets","_JSONRequest","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","path","limit","query","creator","name","unit","index","nextToken","next","includeAll","length","undefined","default"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/client/v2/indexer/searchForAssets.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\n\n/**\n * Returns information about indexed assets.\n *\n * #### Example\n * ```typescript\n * const assets = await indexerClient.searchForAssets().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assets)\n * @category GET\n */\nexport default class SearchForAssets extends JSONRequest {\n  /**\n   * @returns `/v2/assets`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/assets';\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given creator address.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .creator(address)\n   *        .do();\n   * ```\n   *\n   * @param creator\n   * @category query\n   */\n  creator(creator: string) {\n    this.query.creator = creator;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given name.\n   *\n   * #### Example\n   * ```typescript\n   * const name = \"Test Token\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .name(name)\n   *        .do();\n   * ```\n   *\n   * @param name\n   * @category query\n   */\n  name(name: string) {\n    this.query.name = name;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given unit.\n   *\n   * #### Example\n   * ```typescript\n   * const unit = \"test\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .unit(unit)\n   *        .do();\n   * ```\n   *\n   * @param unit\n   * @category query\n   */\n  unit(unit: string) {\n    this.query.unit = unit;\n    return this;\n  }\n\n  /**\n   * Asset ID for filter, as int.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .index(assetId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupAssetByID(assetId).do();`\n   * @param index\n   * @category query\n   */\n  index(index: number) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   *\n   * const assetsPage1 = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const assetsPage2 = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .nextToken(assetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAExC;;;;;;;;;;;AAAA,IAWqBC,eAAgB,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA;EAAA,SAAAA,gBAAA;IAAAK,eAAA,OAAAL,eAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,eAAA;IAAAS,GAAA;IAAAC,KAAA;IACnC;;;IAGA;IACA,SAAAC,KAAA,EAAI;MACF,OAAO,YAAY;IACrB;IAEA;;;;;;;;;;;;;;;EAAA;IAAAF,GAAA;IAAAC,KAAA,EAeA,SAAAE,MAAMA,MAAa;MACjB,IAAI,CAACC,KAAK,CAACD,KAAK,GAAGA,MAAK;MACxB,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAeA,SAAAI,QAAQA,QAAe;MACrB,IAAI,CAACD,KAAK,CAACC,OAAO,GAAGA,QAAO;MAC5B,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;EAAA;IAAAL,GAAA;IAAAC,KAAA,EAeA,SAAAK,KAAKA,KAAY;MACf,IAAI,CAACF,KAAK,CAACE,IAAI,GAAGA,KAAI;MACtB,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;EAAA;IAAAN,GAAA;IAAAC,KAAA,EAeA,SAAAM,KAAKA,KAAY;MACf,IAAI,CAACH,KAAK,CAACG,IAAI,GAAGA,KAAI;MACtB,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAeA,SAAAO,MAAMA,MAAa;MACjB,IAAI,CAACJ,KAAK,CAAC,UAAU,CAAC,GAAGI,MAAK;MAC9B,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;;;;;;;EAAA;IAAAR,GAAA;IAAAC,KAAA,EAqBA,SAAAQ,UAAUA,UAAiB;MACzB,IAAI,CAACL,KAAK,CAACM,IAAI,GAAGD,UAAS;MAC3B,OAAO,IAAI;IACb;IAEA;;;;;;;;;;;;;;;;;;;;;;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAsBA,SAAAU,WAAA,EAAuB;MAAA,IAAZV,KAAK,GAAAH,SAAA,CAAAc,MAAA,QAAAd,SAAA,QAAAe,SAAA,GAAAf,SAAA,MAAG,IAAI;MACrB,IAAI,CAACM,KAAK,CAAC,aAAa,CAAC,GAAGH,KAAK;MACjC,OAAO,IAAI;IACb;EAAC;EAAA,OAAAV,eAAA;AAAA,EAhK0CD,WAAW;AAAA,SAAnCC,eAAgB,IAAAuB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}