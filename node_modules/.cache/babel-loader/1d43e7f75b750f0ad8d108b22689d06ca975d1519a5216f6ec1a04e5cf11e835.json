{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport shallowEqual from \"rc-util/es/isEqual\";\nimport * as React from 'react';\nimport { formatValue, isEqual } from \"../utils/dateUtil\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n    generateConfig = _ref.generateConfig,\n    locale = _ref.locale;\n  var _useMemo = useMemo(function () {\n      if (!value) {\n        return [[''], ''];\n      }\n\n      // We will convert data format back to first format\n      var firstValueText = '';\n      var fullValueTexts = [];\n      for (var i = 0; i < formatList.length; i += 1) {\n        var format = formatList[i];\n        var formatStr = formatValue(value, {\n          generateConfig: generateConfig,\n          locale: locale,\n          format: format\n        });\n        fullValueTexts.push(formatStr);\n        if (i === 0) {\n          firstValueText = formatStr;\n        }\n      }\n      return [fullValueTexts, firstValueText];\n    }, [value, formatList, locale], function (prev, next) {\n      return (\n        // Not Same Date\n        !isEqual(generateConfig, prev[0], next[0]) ||\n        // Not Same format\n        !shallowEqual(prev[1], next[1], true) ||\n        // Not Same locale\n        !shallowEqual(prev[2], next[2], true)\n      );\n    }),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    texts = _useMemo2[0],\n    text = _useMemo2[1];\n  return React.useMemo(function () {\n    return [texts, text];\n  }, [texts.join(''), text]);\n}","map":{"version":3,"names":["_slicedToArray","useMemo","shallowEqual","React","formatValue","isEqual","useValueTexts","value","_ref","formatList","generateConfig","locale","_useMemo","firstValueText","fullValueTexts","i","length","format","formatStr","push","prev","next","_useMemo2","texts","text","join"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/node_modules/rc-picker/es/hooks/useValueTexts.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport shallowEqual from \"rc-util/es/isEqual\";\nimport * as React from 'react';\nimport { formatValue, isEqual } from \"../utils/dateUtil\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n    generateConfig = _ref.generateConfig,\n    locale = _ref.locale;\n  var _useMemo = useMemo(function () {\n      if (!value) {\n        return [[''], ''];\n      }\n\n      // We will convert data format back to first format\n      var firstValueText = '';\n      var fullValueTexts = [];\n      for (var i = 0; i < formatList.length; i += 1) {\n        var format = formatList[i];\n        var formatStr = formatValue(value, {\n          generateConfig: generateConfig,\n          locale: locale,\n          format: format\n        });\n        fullValueTexts.push(formatStr);\n        if (i === 0) {\n          firstValueText = formatStr;\n        }\n      }\n      return [fullValueTexts, firstValueText];\n    }, [value, formatList, locale], function (prev, next) {\n      return (\n        // Not Same Date\n        !isEqual(generateConfig, prev[0], next[0]) ||\n        // Not Same format\n        !shallowEqual(prev[1], next[1], true) ||\n        // Not Same locale\n        !shallowEqual(prev[2], next[2], true)\n      );\n    }),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    texts = _useMemo2[0],\n    text = _useMemo2[1];\n  return React.useMemo(function () {\n    return [texts, text];\n  }, [texts.join(''), text]);\n}"],"mappings":"AAAA,OAAOA,cAAc,MAAM,0CAA0C;AACrE,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,EAAEC,OAAO,QAAQ,mBAAmB;AACxD,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACjD,IAAIC,UAAU,GAAGD,IAAI,CAACC,UAAU;IAC9BC,cAAc,GAAGF,IAAI,CAACE,cAAc;IACpCC,MAAM,GAAGH,IAAI,CAACG,MAAM;EACtB,IAAIC,QAAQ,GAAGX,OAAO,CAAC,YAAY;MAC/B,IAAI,CAACM,KAAK,EAAE;QACV,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MACnB;;MAEA;MACA,IAAIM,cAAc,GAAG,EAAE;MACvB,IAAIC,cAAc,GAAG,EAAE;MACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,UAAU,CAACO,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;QAC7C,IAAIE,MAAM,GAAGR,UAAU,CAACM,CAAC,CAAC;QAC1B,IAAIG,SAAS,GAAGd,WAAW,CAACG,KAAK,EAAE;UACjCG,cAAc,EAAEA,cAAc;UAC9BC,MAAM,EAAEA,MAAM;UACdM,MAAM,EAAEA;QACV,CAAC,CAAC;QACFH,cAAc,CAACK,IAAI,CAACD,SAAS,CAAC;QAC9B,IAAIH,CAAC,KAAK,CAAC,EAAE;UACXF,cAAc,GAAGK,SAAS;QAC5B;MACF;MACA,OAAO,CAACJ,cAAc,EAAED,cAAc,CAAC;IACzC,CAAC,EAAE,CAACN,KAAK,EAAEE,UAAU,EAAEE,MAAM,CAAC,EAAE,UAAUS,IAAI,EAAEC,IAAI,EAAE;MACpD;QACE;QACA,CAAChB,OAAO,CAACK,cAAc,EAAEU,IAAI,CAAC,CAAC,CAAC,EAAEC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1C;QACA,CAACnB,YAAY,CAACkB,IAAI,CAAC,CAAC,CAAC,EAAEC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;QACrC;QACA,CAACnB,YAAY,CAACkB,IAAI,CAAC,CAAC,CAAC,EAAEC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI;MAAC;IAEzC,CAAC,CAAC;IACFC,SAAS,GAAGtB,cAAc,CAACY,QAAQ,EAAE,CAAC,CAAC;IACvCW,KAAK,GAAGD,SAAS,CAAC,CAAC,CAAC;IACpBE,IAAI,GAAGF,SAAS,CAAC,CAAC,CAAC;EACrB,OAAOnB,KAAK,CAACF,OAAO,CAAC,YAAY;IAC/B,OAAO,CAACsB,KAAK,EAAEC,IAAI,CAAC;EACtB,CAAC,EAAE,CAACD,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC,EAAED,IAAI,CAAC,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}