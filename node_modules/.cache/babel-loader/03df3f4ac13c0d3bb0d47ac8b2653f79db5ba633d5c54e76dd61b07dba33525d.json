{"ast":null,"code":"export var ABIReferenceType;\n(function (ABIReferenceType) {\n  /**\n   * Account reference type\n   */\n  ABIReferenceType[\"account\"] = \"account\";\n  /**\n   * Application reference type\n   */\n  ABIReferenceType[\"application\"] = \"application\";\n  /**\n   * Asset reference type\n   */\n  ABIReferenceType[\"asset\"] = \"asset\";\n})(ABIReferenceType || (ABIReferenceType = {}));\nexport function abiTypeIsReference(type) {\n  return type === ABIReferenceType.account || type === ABIReferenceType.application || type === ABIReferenceType.asset;\n}","map":{"version":3,"names":["ABIReferenceType","abiTypeIsReference","type","account","application","asset"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/algosdk/src/abi/reference.ts"],"sourcesContent":["export enum ABIReferenceType {\n  /**\n   * Account reference type\n   */\n  account = 'account',\n\n  /**\n   * Application reference type\n   */\n  application = 'application',\n\n  /**\n   * Asset reference type\n   */\n  asset = 'asset',\n}\n\nexport function abiTypeIsReference(type: any): type is ABIReferenceType {\n  return (\n    type === ABIReferenceType.account ||\n    type === ABIReferenceType.application ||\n    type === ABIReferenceType.asset\n  );\n}\n"],"mappings":"AAAA,WAAYA,gBAeX;AAfD,WAAYA,gBAAgB;EAC1B;;;EAGAA,gBAAA,uBAAmB;EAEnB;;;EAGAA,gBAAA,+BAA2B;EAE3B;;;EAGAA,gBAAA,mBAAe;AACjB,CAAC,EAfWA,gBAAgB,KAAhBA,gBAAgB;AAiB5B,OAAM,SAAUC,kBAAkBA,CAACC,IAAS;EAC1C,OACEA,IAAI,KAAKF,gBAAgB,CAACG,OAAO,IACjCD,IAAI,KAAKF,gBAAgB,CAACI,WAAW,IACrCF,IAAI,KAAKF,gBAAgB,CAACK,KAAK;AAEnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}