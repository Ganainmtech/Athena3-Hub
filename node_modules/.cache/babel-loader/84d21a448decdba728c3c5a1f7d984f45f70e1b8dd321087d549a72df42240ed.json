{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Select from '../../select';\nimport { ColorFormat } from '../interface';\nimport ColorAlphaInput from './ColorAlphaInput';\nimport ColorHexInput from './ColorHexInput';\nimport ColorHsbInput from './ColorHsbInput';\nimport ColorRgbInput from './ColorRgbInput';\nvar selectOptions = [ColorFormat.hex, ColorFormat.hsb, ColorFormat.rgb].map(function (format) {\n  return {\n    value: format,\n    label: format.toLocaleUpperCase()\n  };\n});\nvar ColorInput = function ColorInput(props) {\n  var prefixCls = props.prefixCls,\n    format = props.format,\n    value = props.value,\n    disabledAlpha = props.disabledAlpha,\n    onFormatChange = props.onFormatChange,\n    onChange = props.onChange;\n  var _useMergedState = useMergedState(ColorFormat.hex, {\n      value: format,\n      onChange: onFormatChange\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    colorFormat = _useMergedState2[0],\n    setColorFormat = _useMergedState2[1];\n  var colorInputPrefixCls = \"\".concat(prefixCls, \"-input\");\n  var handleFormatChange = function handleFormatChange(newFormat) {\n    setColorFormat(newFormat);\n  };\n  var steppersNode = useMemo(function () {\n    var inputProps = {\n      value: value,\n      prefixCls: prefixCls,\n      onChange: onChange\n    };\n    switch (colorFormat) {\n      case ColorFormat.hsb:\n        return /*#__PURE__*/React.createElement(ColorHsbInput, Object.assign({}, inputProps));\n      case ColorFormat.rgb:\n        return /*#__PURE__*/React.createElement(ColorRgbInput, Object.assign({}, inputProps));\n      case ColorFormat.hex:\n      default:\n        return /*#__PURE__*/React.createElement(ColorHexInput, Object.assign({}, inputProps));\n    }\n  }, [colorFormat, prefixCls, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(colorInputPrefixCls, \"-container\")\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: colorFormat,\n    bordered: false,\n    getPopupContainer: function getPopupContainer(current) {\n      return current;\n    },\n    popupMatchSelectWidth: 68,\n    placement: \"bottomRight\",\n    onChange: handleFormatChange,\n    className: \"\".concat(prefixCls, \"-format-select\"),\n    size: \"small\",\n    options: selectOptions\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: colorInputPrefixCls\n  }, steppersNode), !disabledAlpha && /*#__PURE__*/React.createElement(ColorAlphaInput, {\n    prefixCls: prefixCls,\n    value: value,\n    onChange: onChange\n  }));\n};\nexport default ColorInput;","map":{"version":3,"names":["_slicedToArray","useMergedState","React","useMemo","Select","ColorFormat","ColorAlphaInput","ColorHexInput","ColorHsbInput","ColorRgbInput","selectOptions","hex","hsb","rgb","map","format","value","label","toLocaleUpperCase","ColorInput","props","prefixCls","disabledAlpha","onFormatChange","onChange","_useMergedState","_useMergedState2","colorFormat","setColorFormat","colorInputPrefixCls","concat","handleFormatChange","newFormat","steppersNode","inputProps","createElement","Object","assign","className","bordered","getPopupContainer","current","popupMatchSelectWidth","placement","size","options"],"sources":["/Users/wanjinwoo/Desktop/Study/web3/Algorand/Athena3-Hub/Athena3-Hub-athena-frontend/node_modules/antd/es/color-picker/components/ColorInput.js"],"sourcesContent":["\"use client\";\n\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Select from '../../select';\nimport { ColorFormat } from '../interface';\nimport ColorAlphaInput from './ColorAlphaInput';\nimport ColorHexInput from './ColorHexInput';\nimport ColorHsbInput from './ColorHsbInput';\nimport ColorRgbInput from './ColorRgbInput';\nconst selectOptions = [ColorFormat.hex, ColorFormat.hsb, ColorFormat.rgb].map(format => ({\n  value: format,\n  label: format.toLocaleUpperCase()\n}));\nconst ColorInput = props => {\n  const {\n    prefixCls,\n    format,\n    value,\n    disabledAlpha,\n    onFormatChange,\n    onChange\n  } = props;\n  const [colorFormat, setColorFormat] = useMergedState(ColorFormat.hex, {\n    value: format,\n    onChange: onFormatChange\n  });\n  const colorInputPrefixCls = `${prefixCls}-input`;\n  const handleFormatChange = newFormat => {\n    setColorFormat(newFormat);\n  };\n  const steppersNode = useMemo(() => {\n    const inputProps = {\n      value,\n      prefixCls,\n      onChange\n    };\n    switch (colorFormat) {\n      case ColorFormat.hsb:\n        return /*#__PURE__*/React.createElement(ColorHsbInput, Object.assign({}, inputProps));\n      case ColorFormat.rgb:\n        return /*#__PURE__*/React.createElement(ColorRgbInput, Object.assign({}, inputProps));\n      case ColorFormat.hex:\n      default:\n        return /*#__PURE__*/React.createElement(ColorHexInput, Object.assign({}, inputProps));\n    }\n  }, [colorFormat, prefixCls, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${colorInputPrefixCls}-container`\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: colorFormat,\n    bordered: false,\n    getPopupContainer: current => current,\n    popupMatchSelectWidth: 68,\n    placement: \"bottomRight\",\n    onChange: handleFormatChange,\n    className: `${prefixCls}-format-select`,\n    size: \"small\",\n    options: selectOptions\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: colorInputPrefixCls\n  }, steppersNode), !disabledAlpha && /*#__PURE__*/React.createElement(ColorAlphaInput, {\n    prefixCls: prefixCls,\n    value: value,\n    onChange: onChange\n  }));\n};\nexport default ColorInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}